<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IP网络技术课程</title>
    <url>/IP%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E8%AF%BE%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="课程需要"><a href="#课程需要" class="headerlink" title="课程需要"></a>课程需要</h1><p>因为课程的需求，需要学习IP网络技术内容，学习交换机路由器等组网和些许协议知识<a id="more"></a>。在练习中运用思科Cisco Packet Tracer Student软件进行学习。</p><hr><h2 id="交换机VLAN配置-3500系列交换机）"><a href="#交换机VLAN配置-3500系列交换机）" class="headerlink" title="交换机VLAN配置(3500系列交换机）"></a>交换机VLAN配置(3500系列交换机）</h2><ol><li>进入VLAN配置模式<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vlan data</span><br></pre></td></tr></table></figure></li><li>建立VLAN(建立VLAN10，命名为work1,且可直接建立不命名。)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(vlan)# vlan 10 name work1</span><br></pre></td></tr></table></figure></li><li>删除VLAN<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vlan database</span><br><span class="line">(vlan)# no vlan 10</span><br></pre></td></tr></table></figure></li><li>分配交换机端口到VLAN<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># configure terminal</span><br><span class="line">(config)# int f0&#x2F;1</span><br><span class="line">(config-if)# switchport access vlan 10</span><br></pre></td></tr></table></figure></li><li>VLAN Trunk配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># configure terminal</span><br><span class="line">(config)# int f0&#x2F;24</span><br><span class="line">(config-if)# switchport mode trunk</span><br><span class="line">(config-if)# switchport trunk allowed vlan 1,10</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="端口聚合配置"><a href="#端口聚合配置" class="headerlink" title="端口聚合配置"></a>端口聚合配置</h2><ol><li>端口聚合<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# interface range fastEthernet 0&#x2F;23-24</span><br><span class="line">(config-if-range)# channel-group 1 mode on </span><br><span class="line">(config-if-range)# switchport mode trunk</span><br><span class="line">(config-if-range)# switchport trunk allowed vlan 10</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="STP生成树协议"><a href="#STP生成树协议" class="headerlink" title="STP生成树协议"></a>STP生成树协议</h2><ol><li>启用交换机的默认VLAN生成树功能<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# spanning-tree vlan 1</span><br></pre></td></tr></table></figure></li><li>关闭交换机的默认VLAN生成树功能<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# no spanning-tree vlan 1</span><br></pre></td></tr></table></figure></li><li>查看生成树情况<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># show spanning-tree summary</span><br><span class="line"># show spanning-tree vlan 1</span><br></pre></td></tr></table></figure></li><li>指定根网桥<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# spanning-tree vlan 10 root primary</span><br></pre></td></tr></table></figure></li><li>网桥优先级<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# spanning-tree vlan 10  priority 24768</span><br></pre></td></tr></table></figure></li><li>端口优先级<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config-if)# spanning-tree vlan 10  port-priority 128</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h2><ol><li><p>查看路由表信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># show ip route</span><br><span class="line"># show ip route summary</span><br></pre></td></tr></table></figure></li><li><p>配置路由地址</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# interface gigabitEthernet 0&#x2F;1</span><br><span class="line">(config-if)# ip address 10.10.10.1 255.255.255.0</span><br><span class="line">(config-if)# no shutdown</span><br></pre></td></tr></table></figure></li><li><p>配置静态路由</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# ip route &lt;目的网段&gt;   &lt;子网掩码&gt;   &lt;下一跳地址口&gt;</span><br><span class="line">(config)# ip route 20.20.20.0 255.255.255.0 172.168.10.2</span><br></pre></td></tr></table></figure></li><li><p>单臂路由</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# interface gigabitEthernet 0&#x2F;1</span><br><span class="line">(config-if)# no shutdown</span><br><span class="line">(config)# interface gigabitEthernet 0&#x2F;1.1</span><br><span class="line">(config-subif)# encapsulation dot1Q 10</span><br><span class="line">(config-subif)# ip address 10.10.10.1 255.255.255.0</span><br><span class="line">(config)# interface gigabitEthernet 0&#x2F;1.2</span><br><span class="line">(config-subif)# encapsulation dot1Q 20</span><br><span class="line">(config-subif)# ip address 20.20.20.1 255.255.255.0</span><br></pre></td></tr></table></figure><blockquote><p>交换机对接的路由器的接口需要配置成Trunk模式，允许VLAN10,20通过。</p></blockquote></li><li><p>环回接口配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# interface loopback 0</span><br><span class="line">(config-if)# ip address 192.168.100.1 255.255.255.255</span><br></pre></td></tr></table></figure></li><li><p>RIP协议</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# router rip</span><br><span class="line">(config-router)# network 192.168.10.0</span><br><span class="line">(config-router)# network 192.168.20.0</span><br></pre></td></tr></table></figure><blockquote><p>这里的地址是路由器接口处网络地址（参与RIP协议的网络地址）<br><br>两个接口都有网络地址就都写上去，注意单臂路由的子网络地址也要写全。</p></blockquote></li><li><p>选择RIP V2版本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# router rip</span><br><span class="line">(config-router)# version 2</span><br><span class="line">(config-router)# no auto-summary</span><br><span class="line">(config-router)# network 192.168.10.0</span><br><span class="line">(config-router)# network 192.168.20.0</span><br><span class="line">清理路由表</span><br><span class="line"># clear ip route*</span><br></pre></td></tr></table></figure></li><li><p>OSPF协议（开放最短路径优先协议）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.启用OSPF协议</span><br><span class="line">(config)# router ospf 1</span><br><span class="line">2.配置路由器的router-id，建议使用loopback地址作为路由器的router-id（没有要求可不配）</span><br><span class="line">(config-router)# router-id &lt;router-id&gt;</span><br><span class="line">3.重启进程确保router-id生效</span><br><span class="line"># clear ip ospf process</span><br><span class="line">4.配置运行OSPF的接口以及所在区域</span><br><span class="line">(config-router)# network &lt;子网号&gt;  &lt;掩码的反码&gt; &lt;区域号&gt;</span><br><span class="line">(config-router)# network 30.10.1.0 0.0.0.255 area 0</span><br><span class="line">5.末节区域</span><br><span class="line">(config)# router ospf 1</span><br><span class="line">(config-router)# area &lt;域编号&gt; stub   &#x2F;&#x2F;配置末节区域</span><br><span class="line">(config-router)# area &lt;域编号&gt; stub no-summary &#x2F;&#x2F;配置完全末节区域</span><br><span class="line">6.配置区域间的路由聚合</span><br><span class="line">(config-router)# area &lt;域编号&gt; range &lt;汇聚网段&gt; &lt;掩码&gt;</span><br><span class="line">(config-router)# area 1 range 50.50.50.0 255.255.255.240</span><br><span class="line">7.重分发其他路由协议</span><br><span class="line">(config-router)# redistribute &lt;其他路由协议&gt; subnets</span><br><span class="line">(config-router)# redistribute connected subnets  &#x2F;&#x2F;重发布携带子网的直连路由</span><br><span class="line">(config-router)# redistribute static subnets     &#x2F;&#x2F;重发布携带子网的静态路由</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="9"><li>ACL（Access Control List）<blockquote><p>标准ACL：1-99, 1000-1499<br><br>扩展ACL：100-199， 1500-1999</p></blockquote></li><li>进入标准ACL配置模式（只能以源地址作为过滤条件）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# ip access-list standard &lt;acl number&#x2F;name&gt;</span><br><span class="line">定义规则&lt;br&#x2F;&gt;</span><br><span class="line">(config-std nacl)# &lt;rule ID&gt; &lt;permit|deny&gt; host &lt;IP地址&gt;</span><br><span class="line">(config-std nacl)# &lt;rule ID&gt; &lt;permit|deny&gt; any</span><br><span class="line">(config-std nacl)# &lt;rule ID&gt; &lt;permit|deny&gt; &lt;源IP地址网段&gt; &lt;通配符掩码&gt;</span><br></pre></td></tr></table></figure></li><li>进入扩展ACL配置模式（以源地址、目的地址、协议及端口号作为过滤标准）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# ip access-list extended &lt;acl number&#x2F;name&gt;</span><br><span class="line">定义规则&lt;br&#x2F;&gt;</span><br><span class="line">(config-ext-nacl)# &lt;rule ID&gt; &lt;permit|deny&gt; ip host &lt;源IP地址&gt; host &lt;目的IP地址&gt;</span><br><span class="line">(config-ext-nacl)# &lt;rule ID&gt; &lt;permit|deny&gt; ip any any</span><br><span class="line">(config-ext-nacl)# &lt;rule ID&gt; &lt;permit|deny&gt; ip &lt;源IP地址网段&gt; &lt;通配符掩码&gt; &lt;目的IP地址网段&gt; &lt;通配符掩码&gt;</span><br></pre></td></tr></table></figure></li><li>在接口上绑定ACL<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# interface &lt;接口类型&gt; &lt;接口编号&gt;</span><br><span class="line">(config-if)# ip access-group &lt;acl number&#x2F;name&gt; &lt;out|in&gt;</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="10"><li>NAT配置<blockquote><p>配置静态NAT<br></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# ip nat inside source static &lt;内部本地地址&gt; &lt;内部全局地址&gt;</span><br><span class="line">在路由器接口上设置NAT内部接口和NAT外部接口(根据要求自己选)</span><br><span class="line">(config)# interface &lt;接口类型&gt; &lt;接口编号&gt;</span><br><span class="line">(config-if)# ip nat inside</span><br><span class="line">(config)# int &lt;接口类型&gt; &lt;接口编号&gt;</span><br><span class="line">(config-if)# ip nat outside</span><br></pre></td></tr></table></figure><blockquote><p>动态NAT配置</p></blockquote></li><li>一对一<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# access-list &lt;acl编号&gt; permit &lt;地址网段&gt; &lt;通配符掩码&gt;</span><br><span class="line">(config-if)# ip nat pool &lt;地址池名称&gt; &lt;起始IP地址&gt; &lt;结束IP地址&gt; network &lt;掩码&gt;</span><br><span class="line">(config-if)# ip nat inside source list &lt;内部地址列表编号&gt; pool &lt;地址池名称&gt;</span><br></pre></td></tr></table></figure></li><li>一对多(2种)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# access-list &lt;acl编号&gt; permit &lt;地址网段&gt; &lt;通配符掩码&gt;</span><br><span class="line">(config-if)# ip nat pool &lt;地址池名称&gt; &lt;起始IP地址&gt; &lt;结束IP地址&gt; network &lt;掩码&gt;</span><br><span class="line">(config-if)# ip nat inside source list &lt;内部地址列表编号&gt; pool &lt;地址池名称&gt; overload</span><br></pre></td></tr></table></figure>或者<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# access-list &lt;acl编号&gt; permit &lt;地址网段&gt; &lt;通配符掩码&gt;</span><br><span class="line">(config-if)# ip nat inside source list &lt;内部地址列表编号&gt; interface &lt;接口类型&gt; &lt;接口编号&gt; overload</span><br></pre></td></tr></table></figure></li></ol><hr><ol start="11"><li>DHCP配置<blockquote><p>创建DHCP地址池</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# ip dhcp pool &lt;地址池名称&gt;</span><br><span class="line">(dhcp-config)# network &lt;IP地址网段&gt; &lt;子网掩码&gt;</span><br><span class="line">(dhcp-config)# default-router &lt;默认网关地址&gt;</span><br><span class="line">(dhcp-config)# dns-server &lt;DNS服务器&gt;</span><br></pre></td></tr></table></figure><blockquote><p>设置DHCP池中不被分配的IP地址</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# ip dhcp excluded-address &lt;起始IP地址&gt; &lt;结束IP地址&gt;</span><br></pre></td></tr></table></figure><blockquote><p>在路由器接口上配置接口地址用于默认网关（<em>注意：需要和上面地址池中的默认网关地址一样</em>）</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(config)# interface &lt;接口类型&gt; &lt;接口编号&gt;</span><br><span class="line">(config-if)# ip address &lt;IP地址&gt; &lt;子网掩码&gt;</span><br></pre></td></tr></table></figure></li></ol><hr>]]></content>
      <categories>
        <category>IP</category>
      </categories>
      <tags>
        <tag>课程</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32的ISP下载无反应</title>
    <url>/STM32%E7%9A%84ISP%E4%B8%8B%E8%BD%BD%E6%97%A0%E5%8F%8D%E5%BA%94/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>刚草草学完51单片机知识，自以为可以学习STM32了，谁知板子到的第一天就头疼欲裂，按照51的习惯，都会先下载一个流水灯的程序进板子瞅瞅，可我按照视频以及教程，板子下载成功就是没反应。<a id="more"></a> 对于一个新手真的折腾人，我看了网上的问题，甚至去B站的弹幕里找答案，但是都没有解决。正当我快要放弃甚至去退板子的时候，我想起B站里原子的视频开头（我的未来不是梦~~），那魔性但又励志的歌曲，我决定突破这个问题，于是我在原子的官网论坛找到了解决方法。o(╥﹏╥)o</p><hr><h2 id="ISP下载问题所在"><a href="#ISP下载问题所在" class="headerlink" title="ISP下载问题所在"></a>ISP下载问题所在</h2><p>按照正点原子的教程我们先下载一个程序的hex文件，发现成功的，但是板子没有任何反应，期待的跑马灯连屁股都没有。<br></p><hr><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在选项字节区，编程到FLASH时写选项字节不要勾选，除此之外，设定选项字节等中的自动增量设定要修改，启动自动增量不要打钩，如图：</p><img src="/STM32%E7%9A%84ISP%E4%B8%8B%E8%BD%BD%E6%97%A0%E5%8F%8D%E5%BA%94/1.jpg" title="图示"><hr><h2 id="串口通信软件打不开问题"><a href="#串口通信软件打不开问题" class="headerlink" title="串口通信软件打不开问题"></a>串口通信软件打不开问题</h2><p>之前碰到串口通信代码之中各种波特率问题，该一样的对应好，但还是有疏漏的地方，在串口通信章节的代码下载好板子后，发现打不开串口通信的软件，或者根本搜索不到端口，但是打开电脑查看属性发现端口自身存在。反复查询之后发现之前玩ESP8266的时候把端口的波特率调成了9600（51单片机不能15200），这里stm32的串口通信波特率我调的是15200，所以需要调回来，很简单。</p><img src="/STM32%E7%9A%84ISP%E4%B8%8B%E8%BD%BD%E6%97%A0%E5%8F%8D%E5%BA%94/2.jpg" title="图示">]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<h1 id="文章省略？"><a href="#文章省略？" class="headerlink" title="文章省略？"></a>文章省略？</h1><a id="more"></a><h2 id="这是个介绍，索性给我实验"><a href="#这是个介绍，索性给我实验" class="headerlink" title="这是个介绍，索性给我实验"></a>这是个介绍，索性给我实验</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>非常的激动，搭载好了自己的博客，花了几天时间去各个大佬博客搜资料以及在b站观察大佬们的制作视频，虽然自己仍是技术方面的萌新选手，但我相信，我今天所为会比昨天的自己更加优秀，索性就研究下怎么添加一个签名去吧。封面除了沙雕的内容其他全部保留用来纪念以及敬畏。</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      <categories>
        <category>others</category>
      </categories>
      <tags>
        <tag>others</tag>
      </tags>
  </entry>
  <entry>
    <title>wifi模块ESP8266-01s入门———调试</title>
    <url>/wifi%E6%A8%A1%E5%9D%97ESP8266-01s%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h2 id="ESP8266-AT模式-器件"><a href="#ESP8266-AT模式-器件" class="headerlink" title="ESP8266(AT模式)器件"></a>ESP8266(AT模式)器件</h2><p>CH340 STC自动下载器，如图:<a id="more"></a><img src="/wifi%E6%A8%A1%E5%9D%97ESP8266-01s%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95/1.jpg" title="图示"><br>以及 ESP8266-01s模块，如图：<img src="/wifi%E6%A8%A1%E5%9D%97ESP8266-01s%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95/0.jpg" title="图示"><br>还有若干杜邦线。</p><hr><h2 id="如何调试学习"><a href="#如何调试学习" class="headerlink" title="如何调试学习"></a>如何调试学习</h2><p>登录哔哩哔哩官网搜索海创电子的ESP8266系列视频教学。点击链接：<a href="https://www.bilibili.com/video/BV117411p7ze/?spm_id_from=333.788.videocard.2" target="_blank" rel="noopener">ESP8266调试</a><br>视频配套的个人博客也可以参考学习，链接如下：<a href="https://blog.csdn.net/daniaoxp/article/details/100976364" target="_blank" rel="noopener">博客资料</a><br></p><hr><h2 id="实验中的问题"><a href="#实验中的问题" class="headerlink" title="实验中的问题"></a>实验中的问题</h2><p>在视频和博客中都有USB-TTL与ESP8266的链接引脚的配对表格：<br></p><table><tr><td>USB-TTL</td><td>ESP8266-01S</td></tr><tr><td>3.3V</td><td>VCC</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>RX</td><td>TX</td></tr><tr><td>TX</td><td>RX</td></tr><tr><td>3.3V</td><td>CH_PD(EN)</td></tr></table>按照博客与视频中的讲解，连接好线路并调试，但是我没有调试成功，这一折腾就是好几天，我仔细对比了博客中所说的调试不成功可能的原因，并一一去实验，发现并没有解决，于是我仔细地翻看视频教学，找到一个细节。视频中讲解到他当时的CH_PD(EN)，也就是使能端并没有接，也调试成功了，但他推荐我们接上，抱着破罐子破摔的态度，我也就尝试了一下，发现真的调试成功了。出现如图：<img src="/wifi%E6%A8%A1%E5%9D%97ESP8266-01s%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95/0.png" title="图示">的样式（回复一个OK，下面有乱码并ready），就调试成功了。<br>注意：<br>1.引脚一定要对应清楚<br>2.调试的时候打开串口，检查COM的口是否对应（在电脑-属性-设备管理器-端口里查看）<br>3.调试过程中ESP8266可能会发烫，这是正常现象，但是建议试验完就拔掉，万一引脚插错了可能烧坏模块。 *** ## 烧录固件（AT指令固件） 视频中需要的AT固件资料不需要找群，只需要去安可信官网，这里直接给出:[AT固件下载地址](https://docs.ai-thinker.com/esp8266/sdk)，找到出厂默认AT固件下载即可。<br>接着打来烧录软件，接上硬件。<img src="/wifi%E6%A8%A1%E5%9D%97ESP8266-01s%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E2%80%94%E8%B0%83%E8%AF%95/2.jpg" title="图示"> >注意的是烧录的时候，ESP8266-01s的IO0引脚一定要接地，我买的下载器是有两个GND脚的（嘿嘿），视频里自己做了另一个接地，这里大家想办法吧。然后调好，串口选好，文件打钩，地址0x0，然后开始，如果是第一次下载会有些慢，反正我差不多1分钟。<p>然后去串口调试助手里尝试一下有没有烧录成功，注意：在烧录成功后，记得复位（一插一拔），同时将之前的Io0口悬空，再开始串口调试，结果返回OK下面有ready就好了。</p><hr><h2 id="WIFI模块的工作模式"><a href="#WIFI模块的工作模式" class="headerlink" title="WIFI模块的工作模式"></a>WIFI模块的工作模式</h2><ol><li>STA模式：相当于模块去连接周围可用WIFI</li><li>AP模式：相当于模块本身开热点给别人连接</li><li>STA+AP:两者兼容。<blockquote><p>前面的123数字也代表着CWMODE的数字</p></blockquote></li></ol><p>利用串口模块发送<br><br>STA模式：<br></p><ol><li>AT+CWMODE=1,设置成STA模式</li><li>AT+CWLAP,扫描附近可用的AP列表（扫描可用WIFI）</li><li>AT+CWJAP=”wifi名称”,”wifi密码”,模块连接周围的某WIFI，并输入密码。返回connect和OK,即为连接成功。</li><li>AT+CWQAP,断开WIFI连接。</li></ol><hr>]]></content>
      <categories>
        <category>WiFi模块</category>
      </categories>
      <tags>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title>stm32代码</title>
    <url>/stm32%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>stm32的寄存器和外设的学习难度比51有了太大的提升，目前也仍在学习当中，在此就仿照当初51的学习过程将关键的代码写下，方便日后直接使用和查看。<a id="more"></a>自己也是入手一个原子的mini板子，在教程和各种资料下努力挣扎。冲！！！<br></p><hr><h2 id="GPIO的知识"><a href="#GPIO的知识" class="headerlink" title="GPIO的知识"></a>GPIO的知识</h2><blockquote><p>IO口输入输出模式</p></blockquote><ol><li>4种输入模式：<br>输入浮空；<br>输入上拉；<br>输入下拉；<br>模拟输入；</li><li>4种输出模式：<br>开漏输出；<br>开漏复用功能；<br>推挽式输出；<br>推挽式复用功能；</li><li>3种最大输出速度：<br>2MHZ；<br>10MHz；<br>50MHz；<blockquote><p>每组IO口所含7个寄存器</p></blockquote></li><li>GPIOx_CRL :端口配置低寄存器</li><li>GPIOx_CRH:端口配置高寄存器</li><li>GPIOx_IDR:端口输入寄存器</li><li>GPIOx_ODR:端口输出寄存器</li><li>GPIOx_BSRR:端口位设置/清除寄存器</li><li>GPIOx_BRR :端口位清除寄存器</li><li>GPIOx_LCKR:端口配置锁存寄存器</li></ol><hr><h2 id="跑马灯实验"><a href="#跑马灯实验" class="headerlink" title="跑马灯实验"></a>跑马灯实验</h2><p>mini板子上的两个LED灯的控制（一红一绿）。<br><br>首先是led.c的使能代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"LED.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stm32f10x.h"</span>     <span class="comment">//任意源文件只要包含了stm32f10x.h，就可以在源文件调用任意外设的函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;  <span class="comment">//声明一个结构体 </span></span><br><span class="line">     </span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOD, ENABLE);          <span class="comment">//使能 GPIOA,GPIOD 端口时钟(每个实验都要使能时钟)</span></span><br><span class="line">     </span><br><span class="line">    GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;   <span class="comment">//设置推挽输出</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin= GPIO_Pin_8;         <span class="comment">//配置PA8引脚LED0</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;  <span class="comment">//IO 口速度为 50MHz</span></span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);           <span class="comment">//初始化GPIOA.8</span></span><br><span class="line">    GPIO_SetBits(GPIOA,GPIO_Pin_8);                 <span class="comment">//拉高（不亮）</span></span><br><span class="line">     </span><br><span class="line">    GPIO_InitStructure.GPIO_Pin= GPIO_Pin_2;      <span class="comment">//配置PD2引脚LED1</span></span><br><span class="line">    GPIO_Init(GPIOD,&amp;GPIO_InitStructure);         <span class="comment">//初始化GPIOD.2</span></span><br><span class="line">    GPIO_SetBits(GPIOD,GPIO_Pin_2);              <span class="comment">//拉高（不亮）</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>led.h头文件的代码（这个都要会写）：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LED_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sys.h"</span>   <span class="comment">//引脚IO口的头文件调用</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义端口</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED0 PAout(8) <span class="comment">// PA8   位操作PAout(8)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED1 PDout(2) <span class="comment">// PD2</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>main.c主函数的代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stm32f10x.h"</span>   <span class="comment">//调用外设</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"led.h"</span>         </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"delay.h"</span>      <span class="comment">//延时函数的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      </span><br><span class="line">      delay_init();    <span class="comment">//延时函数初始化</span></span><br><span class="line"></span><br><span class="line">      LED_Init();      <span class="comment">//led的初始化</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       <span class="comment">//注释掉的是库函数操作的调用拉高函数</span></span><br><span class="line">      <span class="comment">//GPIO_SetBits(GPIOA,GPIO_Pin_8);</span></span><br><span class="line">      <span class="comment">//GPIO_SetBits(GPIOD,GPIO_Pin_2);</span></span><br><span class="line">      <span class="comment">//LED0直接赋值拉高是因为宏定义过LED0为PAout(8)</span></span><br><span class="line">      <span class="comment">//这是位带操作直接赋值到寄存器的方式</span></span><br><span class="line">      LED0=<span class="number">1</span>;</span><br><span class="line">      LED1=<span class="number">0</span>;</span><br><span class="line">      delay_ms(<span class="number">500</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//GPIO_ResetBits(GPIOA,GPIO_Pin_8);</span></span><br><span class="line">      <span class="comment">//GPIO_ResetBits(GPIOD,GPIO_Pin_2);</span></span><br><span class="line">      LED0=<span class="number">0</span>;</span><br><span class="line">      LED1=<span class="number">1</span>;</span><br><span class="line">      delay_ms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">//还有一种直接操纵寄存器的(我没试，应该没问题)</span></span><br><span class="line">      <span class="comment">//GPIOA-&gt;BRR=GPIO_Pin_8; //设置 GPIOA.8 输出 1,等同 LED0=1;</span></span><br><span class="line">      <span class="comment">//GPIOA-&gt;BSRR=GPIO_Pin_8; //设置 GPIOA.8 输出 0,等同 LED0=0;</span></span><br><span class="line">           </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>每个.c或者.h文件敲完后要回车留一空行，不然编译会出错（听说书软件的BUG）。有条件的可以自己买个便宜的（不用买配套的）ST-LINK下载器，用着也没什么问题。比ISP下载方便多了，敲完代码就可以下载。</p></blockquote><hr><h2 id="按键实验"><a href="#按键实验" class="headerlink" title="按键实验"></a>按键实验</h2><p>按键key.c文件代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"key.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"delay.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KEY_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      </span><br><span class="line">      GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOC,ENABLE);<span class="comment">//使能PORTA,PORTC时钟</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//关闭jtag，使能SWD，可以用SWD模式调试</span></span><br><span class="line">      </span><br><span class="line">      GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_15;<span class="comment">//PA15</span></span><br><span class="line">      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">//设置成上拉输入</span></span><br><span class="line">       GPIO_Init(GPIOA, &amp;GPIO_InitStructure);   <span class="comment">//初始化GPIOA15</span></span><br><span class="line">      </span><br><span class="line">      GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_5;  <span class="comment">//PC5</span></span><br><span class="line">      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">//设置成上拉输入</span></span><br><span class="line">       GPIO_Init(GPIOC, &amp;GPIO_InitStructure);  <span class="comment">//初始化GPIOC5</span></span><br><span class="line"> </span><br><span class="line">      GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;<span class="comment">//PA0</span></span><br><span class="line">      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; <span class="comment">//PA0设置成输入，默认下拉        </span></span><br><span class="line">      GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//初始化GPIOA.0</span></span><br><span class="line">      </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">KEY_Scan</span><span class="params">(u8 mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;       </span><br><span class="line">      <span class="keyword">static</span> u8 key_up=<span class="number">1</span>; <span class="comment">//按键按松开标志</span></span><br><span class="line">      <span class="keyword">if</span>(mode)key_up=<span class="number">1</span>;  <span class="comment">//支持连按  ,mode=0,不支持连续按（自己试试）      </span></span><br><span class="line">      <span class="keyword">if</span>(key_up&amp;&amp;(KEY0==<span class="number">0</span>||KEY1==<span class="number">0</span>||WK_UP==<span class="number">1</span>))<span class="comment">//看按键的硬件图</span></span><br><span class="line">      &#123;</span><br><span class="line">      delay_ms(<span class="number">10</span>);  <span class="comment">//去抖动 </span></span><br><span class="line">      key_up=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(KEY0==<span class="number">0</span>)<span class="keyword">return</span> KEY0_PRES;  <span class="comment">//按下</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(KEY1==<span class="number">0</span>)<span class="keyword">return</span> KEY1_PRES;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(WK_UP==<span class="number">1</span>)<span class="keyword">return</span> WKUP_PRES; </span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(KEY0==<span class="number">1</span>&amp;&amp;KEY1==<span class="number">1</span>&amp;&amp;WK_UP==<span class="number">0</span>)key_up=<span class="number">1</span>; <span class="comment">//无按键按下           </span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 无按键按下</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按键key.h头文件</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __KEY_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __KEY_H         </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sys.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY0  GPIO_ReadInputDataBit(GPIOC,GPIO_Pin_5)<span class="comment">//读取按键0</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY1  GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_15)<span class="comment">//读取按键1</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WK_UP   GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_0)<span class="comment">//读取按键2 </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY0_PRES        1        <span class="comment">//KEY0  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY1_PRES        2        <span class="comment">//KEY1 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WKUP_PRES        3        <span class="comment">//WK_UP</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KEY_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;    <span class="comment">//IO初始化</span></span><br><span class="line"><span class="function">u8 <span class="title">KEY_Scan</span><span class="params">(u8 mode)</span></span>;          <span class="comment">//按键扫描函数            </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>主函数main.c</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"led.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"delay.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sys.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"key.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123;        </span><br><span class="line">        u8 t=<span class="number">0</span>;          </span><br><span class="line">        delay_init();          <span class="comment">//延时函数初始化          </span></span><br><span class="line">        LED_Init();            <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line">        KEY_Init();          <span class="comment">//初始化与按键连接的硬件接口</span></span><br><span class="line">        LED0=<span class="number">0</span>;             <span class="comment">//点亮LED</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        t=KEY_Scan(<span class="number">0</span>);        <span class="comment">//得到键值</span></span><br><span class="line">        <span class="keyword">switch</span>(t)</span><br><span class="line">        &#123;         </span><br><span class="line">        <span class="keyword">case</span> KEY0_PRES:</span><br><span class="line">        LED0=!LED0;         <span class="comment">//改变状态</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> KEY1_PRES:</span><br><span class="line">        LED1=!LED1;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WKUP_PRES:        </span><br><span class="line">        LED0=!LED0;</span><br><span class="line">        LED1=!LED1;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        delay_ms(<span class="number">10</span>);        </span><br><span class="line">        &#125; </span><br><span class="line">        &#125;         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>初始化跟跑马灯的一样不难，看手册和PPT可以理解。led的.c文件和头文件仍是需要的，在点灯基础上才能进行，不然程序里哪来的引用。</p></blockquote><hr><h2 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h2><p>与51单片机的串口通信相似，也是通过串口连接单片机接收发送的数据。<br>因为库函数中自带的usart.c文件中完整的文件，这里我直接按照视频中做最基础的部分（不含接收状态的判断等）。<br>main.c文件代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stm32f10x.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"led.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"delay.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sys.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_USART1_Init</span><span class="params">(u32 bound)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     GPIO_InitTypeDef GPIO_InitStrue;   <span class="comment">//结构体</span></span><br><span class="line">     USART_InitTypeDef USART_InitStrue;</span><br><span class="line">     NVIC_InitTypeDef NVIC_InitStrue;</span><br><span class="line">     </span><br><span class="line">     RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);<span class="comment">//</span></span><br><span class="line">     RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);<span class="comment">//使能时钟A和串口一</span></span><br><span class="line">     </span><br><span class="line">     GPIO_InitStrue.GPIO_Mode=GPIO_Mode_AF_PP;   <span class="comment">//GPIO端口模式配置</span></span><br><span class="line">     GPIO_InitStrue.GPIO_Pin=GPIO_Pin_9;             <span class="comment">//复用推挽</span></span><br><span class="line">     GPIO_InitStrue.GPIO_Speed=GPIO_Speed_10MHz;     </span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStrue);<span class="comment">//②        //初始化</span></span><br><span class="line">     </span><br><span class="line">     GPIO_InitStrue.GPIO_Mode=GPIO_Mode_IN_FLOATING;  <span class="comment">//串口一初始化</span></span><br><span class="line">     GPIO_InitStrue.GPIO_Pin=GPIO_Pin_10;      </span><br><span class="line">     GPIO_InitStrue.GPIO_Speed=GPIO_Speed_10MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStrue);<span class="comment">//②</span></span><br><span class="line">     <span class="comment">//串口参数初始化</span></span><br><span class="line">     USART_InitStrue.USART_BaudRate=bound;     <span class="comment">//波特率     </span></span><br><span class="line">     USART_InitStrue.USART_HardwareFlowControl=USART_HardwareFlowControl_None;<span class="comment">//无硬件数据流控制</span></span><br><span class="line">     USART_InitStrue.USART_Mode=USART_Mode_Tx|USART_Mode_Rx;<span class="comment">//收发模式</span></span><br><span class="line">     USART_InitStrue.USART_Parity=USART_Parity_No;<span class="comment">//无奇偶校验位</span></span><br><span class="line">     USART_InitStrue.USART_StopBits=USART_StopBits_1;<span class="comment">//一个停止位</span></span><br><span class="line">     USART_InitStrue.USART_WordLength=USART_WordLength_8b; <span class="comment">//字长为 8 位</span></span><br><span class="line">     </span><br><span class="line">     USART_Init(USART1,&amp;USART_InitStrue);<span class="comment">//③串口参数初始化</span></span><br><span class="line">     </span><br><span class="line">     USART_Cmd(USART1,ENABLE);<span class="comment">//使能串口1</span></span><br><span class="line">     </span><br><span class="line">     USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);<span class="comment">//开启接收中断</span></span><br><span class="line">     </span><br><span class="line">     NVIC_InitStrue.NVIC_IRQChannel=USART1_IRQn; <span class="comment">//串口通道</span></span><br><span class="line">     NVIC_InitStrue.NVIC_IRQChannelCmd=ENABLE;   <span class="comment">//IRQ 通道使能</span></span><br><span class="line">     NVIC_InitStrue.NVIC_IRQChannelPreemptionPriority=<span class="number">3</span>;<span class="comment">//抢占优先级 3</span></span><br><span class="line">     NVIC_InitStrue.NVIC_IRQChannelSubPriority=<span class="number">3</span>;<span class="comment">//子优先级 3</span></span><br><span class="line">     NVIC_Init(&amp;NVIC_InitStrue);       <span class="comment">//中断优先级初始化</span></span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">USART1_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span>   <span class="comment">//编写中断处理函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      u8 res;</span><br><span class="line">      <span class="keyword">if</span>(USART_GetITStatus(USART1,USART_IT_RXNE))<span class="comment">//RXNE（读数据寄存器非空），当该位被置 1 的时候，就是提示已经有数据被接收到了，并且可以读出来了。</span></span><br><span class="line"> &#123;</span><br><span class="line">     res= USART_ReceiveData(USART1); <span class="comment">//接收数据，从DR接收到的数据</span></span><br><span class="line">     USART_SendData(USART1,res);   <span class="comment">//发送到串口</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123;     </span><br><span class="line">     My_USART1_Init(<span class="number">9600</span>);          <span class="comment">//调用初始化函数</span></span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//设置中断分组（优先级0-3）</span></span><br><span class="line">     delay_init();</span><br><span class="line">     LED_Init();</span><br><span class="line">      <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123;   </span><br><span class="line">          LED1 =!LED1 ;</span><br><span class="line">          delay_ms(<span class="number">500</span>);</span><br><span class="line">      &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>实验现象就是串口调试助手中，你发送一个数据，显示你发送的数据。（死循环中的灯随便加的）。</p><hr><h2 id="外部中断（按键）"><a href="#外部中断（按键）" class="headerlink" title="外部中断（按键）"></a>外部中断（按键）</h2><p>STM32的每个IO口都有中断。<br>exti.c中断代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"exti.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"led.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"key.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"delay.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"usart.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//外部中断初始化函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EXTIX_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">        EXTI_InitTypeDef EXTI_InitStructure;<span class="comment">//结构体</span></span><br><span class="line">        NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">         RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//外部中断，需要使能AFIO时钟</span></span><br><span class="line"></span><br><span class="line">       KEY_Init();<span class="comment">//初始化按键对应io模式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//GPIOC.5 中断线以及中断初始化配置，映射到中断线上</span></span><br><span class="line">       GPIO_EXTILineConfig(GPIO_PortSourceGPIOC,GPIO_PinSource5);<span class="comment">//每个IO口都有中断，0-15中断线</span></span><br><span class="line"></span><br><span class="line">       EXTI_InitStructure.EXTI_Line=EXTI_Line5;<span class="comment">//指定配置的中断线</span></span><br><span class="line">       EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;     <span class="comment">//中断模式</span></span><br><span class="line">       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;<span class="comment">//下降沿触发</span></span><br><span class="line">       EXTI_InitStructure.EXTI_LineCmd = ENABLE;<span class="comment">//cmd使能</span></span><br><span class="line">       EXTI_Init(&amp;EXTI_InitStructure);           <span class="comment">//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//GPIOA.15       中断线以及中断初始化配置</span></span><br><span class="line">       GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource15);</span><br><span class="line"></span><br><span class="line">       EXTI_InitStructure.EXTI_Line=EXTI_Line15;</span><br><span class="line">       EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;     </span><br><span class="line">       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;</span><br><span class="line">       EXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class="line">       EXTI_Init(&amp;EXTI_InitStructure);            <span class="comment">//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//GPIOA.0       中断线以及中断初始化配置</span></span><br><span class="line">       GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource0);</span><br><span class="line"></span><br><span class="line">        EXTI_InitStructure.EXTI_Line=EXTI_Line0;</span><br><span class="line">       EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;     </span><br><span class="line">       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;</span><br><span class="line">       EXTI_InitStructure.EXTI_LineCmd = ENABLE;</span><br><span class="line">       EXTI_Init(&amp;EXTI_InitStructure);          <span class="comment">//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">//配置中断分组，使能中断                                        //在stm32f10x.h中，中断通道对应的线</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;               <span class="comment">//使能按键所在的外部中断通道</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;     <span class="comment">//抢占优先级2 misc.h中</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>;               <span class="comment">//子优先级1</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;                         <span class="comment">//使能外部中断通道</span></span><br><span class="line">       NVIC_Init(&amp;NVIC_InitStructure);         <span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line">          </span><br><span class="line">          NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;               <span class="comment">//使能按键所在的外部中断通道（中断线5-9的中断通道）</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;     <span class="comment">//抢占优先级2， </span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;               <span class="comment">//子优先级1</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;                         <span class="comment">//使能外部中断通道</span></span><br><span class="line">       NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;               <span class="comment">//使能按键所在的外部中断通道（中断线10-15的中断通道）</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;     <span class="comment">//抢占优先级2， </span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0</span>;               <span class="comment">//子优先级1</span></span><br><span class="line">       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;                         <span class="comment">//使能外部中断通道</span></span><br><span class="line">       NVIC_Init(&amp;NVIC_InitStructure); </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//中断发生处理的函数（触发）</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EXTI0_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span>   <span class="comment">//编写中断函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  delay_ms(<span class="number">10</span>);    <span class="comment">//消抖</span></span><br><span class="line">     <span class="keyword">if</span>(WK_UP==<span class="number">1</span>)</span><br><span class="line">     &#123;       </span><br><span class="line">          LED0=!LED0;</span><br><span class="line">          LED1=!LED1;     </span><br><span class="line">     &#125;</span><br><span class="line">     EXTI_ClearITPendingBit(EXTI_Line0);  <span class="comment">//手动清除EXTI0线路挂起位，不然下次不会触发</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">EXTI9_5_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;               </span><br><span class="line">     delay_ms(<span class="number">10</span>);   <span class="comment">//消抖                </span></span><br><span class="line">     <span class="keyword">if</span>(KEY0==<span class="number">0</span>)     &#123;</span><br><span class="line">          LED0=!LED0;</span><br><span class="line">     &#125;</span><br><span class="line">       EXTI_ClearITPendingBit(EXTI_Line5);    <span class="comment">//清除LINE5上的中断标志位  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EXTI15_10_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  delay_ms(<span class="number">10</span>);    <span class="comment">//消抖                </span></span><br><span class="line">  <span class="keyword">if</span>(KEY1==<span class="number">0</span>)     &#123;</span><br><span class="line">          LED1=!LED1;</span><br><span class="line">     &#125;</span><br><span class="line">      EXTI_ClearITPendingBit(EXTI_Line15);  <span class="comment">//清除LINE15线路挂起位</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主函数自己会写。（感觉自己现在进步了一丢丢，O(∩_∩)O哈哈~）。如果你在循环中写点东西，中断发生的时候处理中断函数，然后再发生循环里的函数。这就是中断。</p><hr><p>##</p>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>初学单片机2</title>
    <url>/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/</url>
    <content><![CDATA[<h2 id="中断系统"><a href="#中断系统" class="headerlink" title="中断系统"></a>中断系统</h2><ol><li>概念:CPU在处理某一事件A时，发生了另一事件B请求CPU迅速去处理（中断发生）；<a id="more"></a>CPU暂时中断当前的工作，转去处理事件B（中断响应和中断服务）;待CPU将事件B处理完毕后，再回到原来事件A被中断的地方继续处理事件A（中断返回），这一过程称为中断 。</li><li>中断系统结构：<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/1.png" title="图示"><br><br>通过学习我们了解到中断系统的五个中断源，如下表。<table><tr><td>中断源符号</td><td>名称</td><td>中断引起的原因</td><td>中断号</td></tr><tr><td>/INT0</td><td>外部中断0</td><td>P3.2引脚低电平或下降沿信号</td><td>0</td></tr><tr><td>T0</td><td>定时器0中断</td><td>定时/计数器0计数回0溢出</td><td>1</td></tr><tr><td>/INT1</td><td>外部中断1</td><td>P3.3引脚低电平或下降沿信号</td><td>2</td></tr><tr><td>T1</td><td>定时器1中断</td><td>定时/计数器1计数回0溢出</td><td>3</td></tr><tr><td>TI/RI</td><td>串行口中断</td><td>串行通信完成一帧数据发送或接收引起中断</td><td>4</td></tr></table></li></ol><blockquote><p>表格中五个中断源的优先级也是自上而下，引发一个中断需要有必要的条件。（可以对照结构图推断）。<br></p></blockquote><ol><li>IT0 外部中断0触发方式控制位。<pre><code>当IT0=0时，为电平触发方式。
当IT0=1时，为边沿触发方式（下降沿有效）。</code></pre></li><li>EX0=1; 外部中断0中断请求</li><li>EA=1;总中断开关</li></ol><p>举个程序例子：实现用K3按键中断原本LED灯亮，并</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;  <span class="comment">//0-255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;  <span class="comment">//0-65535</span></span><br><span class="line"></span><br><span class="line">sbit led=P2^<span class="number">0</span>;</span><br><span class="line">sbit k3=P3^<span class="number">2</span>;         <span class="comment">//P3.2引脚，对应外部中断INT0</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="keyword">while</span>(i--);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Int0Init</span><span class="params">()</span>        <span class="comment">//这个函数内容可以写在主函数里面</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        IT0=<span class="number">1</span>;        <span class="comment">//触发方式1，下降沿有效</span></span><br><span class="line">        EX0=<span class="number">1</span>;        <span class="comment">//打开外部中断</span></span><br><span class="line">        EA=<span class="number">1</span>;         <span class="comment">//打开总中断开关</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       Int0Init();</span><br><span class="line">       <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Int0</span><span class="params">()</span> interrupt 0         <span class="comment">//中断函数，0为中断号（见表格）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">       <span class="keyword">if</span>(k3==<span class="number">0</span>)        <span class="comment">//当按下按键，翻转灯状态</span></span><br><span class="line">       &#123;</span><br><span class="line">       led=~led;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TCON的中断请求标志：</p><table><tr><td>位</td><td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td></tr><tr><td>字节地址</td><td>TF1</td><td>TR1</td><td>TF0</td><td>TR0</td><td>IE1</td><td>IT1</td><td>IE0</td><td>IT0</td></tr></table><ol><li>IT0（TCON.0），外部中断0触发方式控制位。<br><pre><code>当IT0=0时，为电平触发方式。
当IT0=1时，为边沿触发方式（下降沿有效）。</code></pre></li><li>IE0（TCON.1），外部中断0中断请求标志位。</li><li>IT1（TCON.2），外部中断1触发方式控制位。</li><li>IE1（TCON.3），外部中断1中断请求标志位。</li><li>TF0（TCON.5），定时/计数器T0溢出中断请求标志位。</li><li>TF1（TCON.7），定时/计数器T1溢出中断请求标志位。</li><li>TR1 (TCON.6) ，T1运行控制位。TR1=1时，T1工作。TR1=0时，T1停止工作。</li><li>TR0 (TCON.4) ，同上T0；</li></ol><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"> <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;</span><br><span class="line"></span><br><span class="line">sbit led=P2^<span class="number">0</span>;        <span class="comment">//D1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer0Init</span><span class="params">()</span>        <span class="comment">//可以直接放到主函数中</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       TMOD|=<span class="number">0x01</span>;       <span class="comment">//0000 0001         第四位T0运转，高四位置零不运作。</span></span><br><span class="line">       TH0=<span class="number">0xFC</span>;         <span class="comment">//1111 1100         设置初始值</span></span><br><span class="line">       TL0=<span class="number">0x18</span>;         <span class="comment">//0001 1000        64536=FC18H</span></span><br><span class="line">       ET0=<span class="number">1</span>;        <span class="comment">//打开外部中断0</span></span><br><span class="line">       EA=<span class="number">1</span>;         <span class="comment">//总中断开关</span></span><br><span class="line">       TR0=<span class="number">1</span>;       <span class="comment">// T0运行控制位。TR0=1时，T0工作。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> Timer0Init();</span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time0</span><span class="params">()</span> interrupt 1</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="keyword">static</span> u16 i;  </span><br><span class="line">       TH0=<span class="number">0xFC</span>;        <span class="comment">//1111 1100</span></span><br><span class="line">       TL0=<span class="number">0x18</span>;        <span class="comment">//0001 1000</span></span><br><span class="line">       i++;       <span class="comment">//每累加到1000，也就是1s，执行函数</span></span><br><span class="line">       <span class="keyword">if</span>(i==<span class="number">1000</span>)         <span class="comment">//1s</span></span><br><span class="line">       &#123;</span><br><span class="line">         i=<span class="number">0</span>;        <span class="comment">//清零</span></span><br><span class="line">         led=~led;        <span class="comment">//小灯翻转1s</span></span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>定时器中断的步骤如下：</p></blockquote><ol><li>对TMOD赋值，以确定T0和T1的工作方式。</li><li>计算初值,并将其写入TH0、TL0或TH1、TL1。</li><li>中断方式时，则对EA赋值，开放定时器中断ET0。</li><li>使TR0或TR1置位，启动定时/计数器定时或计数。</li></ol><p>TMOD定时计数寄存器：</p><table><tr><td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td></tr><tr><td>GATE</td><td>C/T</td><td>M1</td><td>M0</td><td>GATE</td><td>C/T</td><td>M1</td><td>M0</td></tr></table><p>高四位控制T1，低四位控制T0.</p><ol><li>GATE——门控制。<br>●GATE=1时，由外部中断引脚INT0、INT1来启动定时器T0、T1.<br>当INT0引脚为高电平时TR0置位，启动定时器T0;<br>当INT1引脚为高电平时TR1置位，启动定时器T1。<br>●GATE=0时，仅由TR0,TR1置位分别启动定时器T0、T1。</li><li>C/T=0时，定时模式；C/T=1时，计数模式。</li><li>M1M0 四种模式。<br></li></ol><p>0 0 方式0 13位计数器</p><p>0 1 方式1 16位计数器</p><p>1 0 方式2 自动重装8位计数器</p><p>1 1 方式3 T0分为2个8位独立计数器，T1此时停止计数。</p><hr><h2 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h2><p>代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span>       <span class="comment">//此文件中定义了单片机的一些特殊功能寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;        <span class="comment">//对数据类型进行声明定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UsartInit</span><span class="params">()</span>         <span class="comment">//可以直接写在主程序中</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         SCON=<span class="number">0X50</span>;         <span class="comment">//SCON设置为工作方式1</span></span><br><span class="line">         TMOD=<span class="number">0X20</span>;         <span class="comment">//设置计数器工作方式2       0010 0000</span></span><br><span class="line">         PCON=<span class="number">0X80</span>;         <span class="comment">//波特率加倍1000 0000</span></span><br><span class="line">         TH1=<span class="number">0XF3</span>;       <span class="comment">//计数器初始值设置，注意波特率是4800的</span></span><br><span class="line">         TL1=<span class="number">0XF3</span>;</span><br><span class="line">         ES=<span class="number">1</span>;         <span class="comment">//打开接收中断</span></span><br><span class="line">         EA=<span class="number">1</span>;         <span class="comment">//打开总中断</span></span><br><span class="line">         TR1=<span class="number">1</span>;         <span class="comment">//打开T1计数器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;         </span><br><span class="line">         UsartInit();  <span class="comment">//         串口初始化</span></span><br><span class="line">         <span class="keyword">while</span>(<span class="number">1</span>);         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart</span><span class="params">()</span> interrupt 4         </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         u8 receiveData;</span><br><span class="line">         <span class="keyword">if</span>(RI==<span class="number">1</span>)       <span class="comment">//是否接受到数据</span></span><br><span class="line">         receiveData=SBUF;        <span class="comment">//出去接收到的数据</span></span><br><span class="line">         RI = <span class="number">0</span>;         <span class="comment">//清除接收中断标志位</span></span><br><span class="line">         SBUF=receiveData;        <span class="comment">//将接收到的数据放入到发送寄存器</span></span><br><span class="line">         <span class="keyword">while</span>(!TI);       <span class="comment">//等待发送数据完成</span></span><br><span class="line">         TI=<span class="number">0</span>;       <span class="comment">//清除发送完成标志位</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SCON串行口控制寄存器</p><table><tr><td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td></tr><tr><td>SM0</td><td>SM1</td><td>SM2</td><td>REN</td><td>TB8</td><td>RB8</td><td>TI</td><td>RI</td></tr></table><p>复制点概念：</p><ol><li>SM0和SM1为工作方式选择位,如图.<br><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/3.png" title="图示"><br></li><li>SM2，多机通信控制位，主要用于方式2和方式3。当接收机的SM2=1时可以利用收到的RB8来控制是否激活RI。</li><li>REN，允许串行接收位。由软件置REN=1，则启动串行口接收数据；若软件置REN=0，则禁止接收。</li><li>TI，发送中断标志位。</li><li>RI，接收中断标志位。</li></ol><p>PCON中的SMOD与串行口工作有关：波特率倍增位。当SMOD=1时，波特率提高一倍。复位时，SMOD=0。<br>如何设置串口：</p><ol><li>确定T1的工作方式（编程TMOD寄存器）；</li><li>计算T1的初值，装载TH1、TL1；</li><li>启动T1（编程TCON中的TR1位）；</li><li>确定串行口控制（编程SCON寄存器）；</li><li>中断申请</li></ol><blockquote><p>关于SBUF，给出链接资料<a href="https://baike.sogou.com/v69375645.htm?fromTitle=SBUF" target="_blank" rel="noopener">SBUF</a>。</p></blockquote><hr><h2 id="IIC总线工作原理"><a href="#IIC总线工作原理" class="headerlink" title="IIC总线工作原理"></a>IIC总线工作原理</h2><p><a href="https://baike.sogou.com/v7668256.htm?fromTitle=I2C%E6%80%BB%E7%BA%BF" target="_blank" rel="noopener">!I2C</a>（Inter－Integrated Circuit）总线是由PHILIPS公司开发的两线式串行总线，用于连接微控制器及其外围设备。<br></p><ol><li>I2C头文件代码代码如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __I2C_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __I2C_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit SCL=P2^<span class="number">1</span>;</span><br><span class="line">sbit SDA=P2^<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2cStart</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2cStop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">I2cSendByte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">I2cReadByte</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">At24c02Write</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> addr,<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">At24c02Read</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> addr)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></li><li>I2C.c文件如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"i2c.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay10us</span><span class="params">()</span>       <span class="comment">//用单片机小精灵弄10us延迟函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         <span class="keyword">unsigned</span> <span class="keyword">char</span> a,b;</span><br><span class="line">         <span class="keyword">for</span>(b=<span class="number">1</span>;b&gt;<span class="number">0</span>;b--)</span><br><span class="line">         <span class="keyword">for</span>(a=<span class="number">2</span>;a&gt;<span class="number">0</span>;a--);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2cStart</span><span class="params">()</span>        <span class="comment">//起始信号：在SCL时钟信号在高电平期间SDA信号产生一个下降沿</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         SDA=<span class="number">1</span>;</span><br><span class="line">         Delay10us();</span><br><span class="line">         SCL=<span class="number">1</span>;</span><br><span class="line">         Delay10us();       <span class="comment">//建立时间是SDA保持时间&gt;4.7us</span></span><br><span class="line">         SDA=<span class="number">0</span>;</span><br><span class="line">         Delay10us();         <span class="comment">//保持时间是&gt;4us</span></span><br><span class="line">         SCL=<span class="number">0</span>;         </span><br><span class="line">         Delay10us();         <span class="comment">//起始之后SDA和SCL都为0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">I2cStop</span><span class="params">()</span>       <span class="comment">//终止信号：在SCL时钟信号高电平期间SDA信号产生一个上升沿</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         SDA=<span class="number">0</span>;</span><br><span class="line">         Delay10us();</span><br><span class="line">         SCL=<span class="number">1</span>;</span><br><span class="line">         Delay10us();       <span class="comment">//建立时间大于4.7us</span></span><br><span class="line">         SDA=<span class="number">1</span>;</span><br><span class="line">         Delay10us();         <span class="comment">//结束之后保持SDA和SCL都为1；表示总线空闲</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">I2cSendByte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span><span class="comment">//发送数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         <span class="keyword">unsigned</span> <span class="keyword">char</span> a=<span class="number">0</span>,b=<span class="number">0</span>;         <span class="comment">//最大255，一个机器周期为1us，最大延时255us。         </span></span><br><span class="line">         <span class="comment">//通过I2C发送一个字节。在SCL时钟信号高电平期间，保持发送信号SDA         </span></span><br><span class="line">         <span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">8</span>;a++)         <span class="comment">//要发送8位，从最高位开始</span></span><br><span class="line">         &#123;         <span class="comment">//起始信号之后SCL=0，所以可以直接改变SDA信号</span></span><br><span class="line">         SDA=dat&gt;&gt;<span class="number">7</span>;       <span class="comment">//将发送的dat一个字节（8位）右移7位，可以把最高位提出赋值给SDA。</span></span><br><span class="line">         dat=dat&lt;&lt;<span class="number">1</span>;       <span class="comment">//将dat左移一位，把最高位挤出去了</span></span><br><span class="line">         Delay10us();</span><br><span class="line">         SCL=<span class="number">1</span>;        <span class="comment">//SCL=1；SDA保持稳定</span></span><br><span class="line">         Delay10us();       <span class="comment">//建立时间&gt;4.7us</span></span><br><span class="line">         SCL=<span class="number">0</span>;       <span class="comment">//SDA可变动</span></span><br><span class="line">         Delay10us();        <span class="comment">//时间大于4us         </span></span><br><span class="line">         &#125;</span><br><span class="line">         SDA=<span class="number">1</span>;         <span class="comment">//释放数据线</span></span><br><span class="line">         Delay10us();</span><br><span class="line">         SCL=<span class="number">1</span>;         <span class="comment">//释放时钟线</span></span><br><span class="line">         <span class="keyword">while</span>(SDA)        <span class="comment">//等待应答，也就是等待从设备把SDA拉低</span></span><br><span class="line">         &#123;</span><br><span class="line">         b++;</span><br><span class="line">         <span class="keyword">if</span>(b&gt;<span class="number">200</span>)       <span class="comment">//如果超过2000us没有应答发送失败，或者为非应答，表示接收结束</span></span><br><span class="line">         &#123;</span><br><span class="line">         SCL=<span class="number">0</span>;        <span class="comment">//拉低</span></span><br><span class="line">         Delay10us();</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;         <span class="comment">//通讯失败，返回0</span></span><br><span class="line">         &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         SCL=<span class="number">0</span>;        <span class="comment">//应答后，拉低SCL</span></span><br><span class="line">         Delay10us();</span><br><span class="line">         <span class="keyword">return</span> <span class="number">1</span>;       <span class="comment">//发送成功，返回1</span></span><br><span class="line">&#125;        <span class="comment">//备注：发送完一个字节SCL=0,SDA=1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">I2cReadByte</span><span class="params">()</span>       <span class="comment">//读取数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         <span class="keyword">unsigned</span> <span class="keyword">char</span> a=<span class="number">0</span>,dat=<span class="number">0</span>;</span><br><span class="line">         SDA=<span class="number">1</span>;        <span class="comment">//起始和发送一个字节之后SCL都是0</span></span><br><span class="line">         Delay10us();</span><br><span class="line">         <span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">8</span>;a++)  <span class="comment">//接收8个字节</span></span><br><span class="line">         &#123;</span><br><span class="line">         SCL=<span class="number">1</span>;       <span class="comment">//拉高，SDA数据稳定</span></span><br><span class="line">         Delay10us();       <span class="comment">//dat从1-8地址位，</span></span><br><span class="line">         dat&lt;&lt;=<span class="number">1</span>;        <span class="comment">//00 01 010</span></span><br><span class="line">         dat|=SDA;       <span class="comment">//        01 11 </span></span><br><span class="line">         Delay10us();       <span class="comment">//或运算</span></span><br><span class="line">         SCL=<span class="number">0</span>;       <span class="comment">//改变</span></span><br><span class="line">         Delay10us();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> dat;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">At24c02Write</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> addr,<span class="keyword">unsigned</span> <span class="keyword">char</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         I2cStart();</span><br><span class="line">         I2cSendByte(<span class="number">0xa0</span>);       <span class="comment">//发送写器件地址1010 0000</span></span><br><span class="line">         I2cSendByte(addr);       <span class="comment">//发送要写入内存地址</span></span><br><span class="line">         I2cSendByte(dat);        <span class="comment">//发送数据</span></span><br><span class="line">         I2cStop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">At24c02Read</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         <span class="keyword">unsigned</span> <span class="keyword">char</span> num;</span><br><span class="line">         I2cStart();</span><br><span class="line">         I2cSendByte(<span class="number">0xa0</span>); <span class="comment">//发送写器件地址</span></span><br><span class="line">         I2cSendByte(addr); <span class="comment">//发送要读取的地址</span></span><br><span class="line">         I2cStart();</span><br><span class="line">         I2cSendByte(<span class="number">0xa1</span>); <span class="comment">//发送读器件地址</span></span><br><span class="line">         num=I2cReadByte(); <span class="comment">//读取数据</span></span><br><span class="line">         I2cStop();</span><br><span class="line">         <span class="keyword">return</span> num;         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>main.c<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************************</span></span><br><span class="line"><span class="comment">实验现象：下载程序后数码管后4位显示0，按K1保存显示的数据，按K2读取上次保存的数据，</span></span><br><span class="line"><span class="comment">        按K3显示数据加一，按K4显示数据清零。最大能写入的数据是255</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">         </span></span><br><span class="line"><span class="comment">注意事项：        </span></span><br><span class="line"><span class="comment">***************************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span>       <span class="comment">//此文件中定义了单片机的一些特殊功能寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"i2c.h"</span>         </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;        <span class="comment">//对数据类型进行声明定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">sbit LSA=P2^<span class="number">2</span>;</span><br><span class="line">sbit LSB=P2^<span class="number">3</span>;</span><br><span class="line">sbit LSC=P2^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">sbit k1=P3^<span class="number">1</span>;</span><br><span class="line">sbit k2=P3^<span class="number">0</span>;</span><br><span class="line">sbit k3=P3^<span class="number">2</span>;</span><br><span class="line">sbit k4=P3^<span class="number">3</span>;       <span class="comment">//定义按键端口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> num=<span class="number">0</span>;</span><br><span class="line">u8 disp[<span class="number">4</span>];</span><br><span class="line">u8 code smgduan[<span class="number">10</span>]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         <span class="keyword">while</span>(i--);         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Keypros</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(k1==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         <span class="built_in">delay</span>(<span class="number">1000</span>);  <span class="comment">//消抖处理</span></span><br><span class="line">         <span class="keyword">if</span>(k1==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         At24c02Write(<span class="number">1</span>,num);       <span class="comment">//在地址1内写入数据num</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span>(!k1);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(k2==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         <span class="built_in">delay</span>(<span class="number">1000</span>);  <span class="comment">//消抖处理</span></span><br><span class="line">         <span class="keyword">if</span>(k2==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         num=At24c02Read(<span class="number">1</span>);        <span class="comment">//读取EEPROM地址1内的数据保存在num中</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span>(!k2);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(k3==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         <span class="built_in">delay</span>(<span class="number">100</span>);  <span class="comment">//消抖处理</span></span><br><span class="line">         <span class="keyword">if</span>(k3==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         num++;         <span class="comment">//数据加1</span></span><br><span class="line">         <span class="keyword">if</span>(num&gt;<span class="number">255</span>)num=<span class="number">0</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span>(!k3);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(k4==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         <span class="built_in">delay</span>(<span class="number">1000</span>);  <span class="comment">//消抖处理</span></span><br><span class="line">         <span class="keyword">if</span>(k4==<span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         num=<span class="number">0</span>;       <span class="comment">//数据清零</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span>(!k4);</span><br><span class="line">         &#125;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">datapros</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         disp[<span class="number">0</span>]=smgduan[num/<span class="number">1000</span>];<span class="comment">//千位</span></span><br><span class="line">         disp[<span class="number">1</span>]=smgduan[num%<span class="number">1000</span>/<span class="number">100</span>];<span class="comment">//百位</span></span><br><span class="line">         disp[<span class="number">2</span>]=smgduan[num%<span class="number">1000</span>%<span class="number">100</span>/<span class="number">10</span>];<span class="comment">//个位</span></span><br><span class="line">         disp[<span class="number">3</span>]=smgduan[num%<span class="number">1000</span>%<span class="number">100</span>%<span class="number">10</span>];         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DigDisplay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         u8 i;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">         &#123;</span><br><span class="line">         <span class="keyword">switch</span>(i)       <span class="comment">//位选，选择点亮的数码管，</span></span><br><span class="line">         &#123;</span><br><span class="line">         <span class="keyword">case</span>(<span class="number">0</span>):</span><br><span class="line">         LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第0位</span></span><br><span class="line">         <span class="keyword">case</span>(<span class="number">1</span>):</span><br><span class="line">         LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第1位</span></span><br><span class="line">         <span class="keyword">case</span>(<span class="number">2</span>):</span><br><span class="line">         LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第2位</span></span><br><span class="line">         <span class="keyword">case</span>(<span class="number">3</span>):</span><br><span class="line">         LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第3位</span></span><br><span class="line">         &#125;</span><br><span class="line">         P0=disp[i];<span class="comment">//发送数据</span></span><br><span class="line">         <span class="built_in">delay</span>(<span class="number">100</span>); <span class="comment">//间隔一段时间扫描         </span></span><br><span class="line">         P0=<span class="number">0x00</span>;<span class="comment">//消隐</span></span><br><span class="line">         &#125;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;         </span><br><span class="line">         <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">         &#123;</span><br><span class="line">         Keypros();       <span class="comment">//按键处理函数</span></span><br><span class="line">         datapros();       <span class="comment">//数据处理函数</span></span><br><span class="line">         DigDisplay();<span class="comment">//数码管显示函数         </span></span><br><span class="line">         &#125;         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>I2C总线通过上拉电阻接正电源。当总线空闲时，两根线均为高电平。</li><li>I2C总线进行数据传送时，时钟信号为高电平期间，数据线上的数据必须保持稳定，只有在时钟线上的信号为低电平期间，数据线上的高电平或低电平状态才允许变化。即，SCL=1时，SDA稳定；SCL=0时，SDA可以变化。</li><li>起始信号和终止信号，相应和非响应（原理看PPT），如图，<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/4.png" title="图示"><br></li></ol><hr><h2 id="DS18B20温度传感器"><a href="#DS18B20温度传感器" class="headerlink" title="DS18B20温度传感器"></a>DS18B20温度传感器</h2><ol><li>主函数main.c代码：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span>         <span class="comment">//此文件中定义了单片机的一些特殊功能寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"temp.h"</span>        </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;       <span class="comment">//对数据类型进行声明定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">sbit LSA=P2^<span class="number">2</span>;</span><br><span class="line">sbit LSB=P2^<span class="number">3</span>;</span><br><span class="line">sbit LSC=P2^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">u8 code smgduan[<span class="number">10</span>]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line">u8 num=<span class="number">0</span>,DisplayData[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(i--);        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">datapros</span><span class="params">(<span class="keyword">int</span> temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;       </span><br><span class="line">         <span class="keyword">float</span> tp;        </span><br><span class="line">         <span class="keyword">if</span>(temp&lt;<span class="number">0</span>)         <span class="comment">//温度数据处理       </span></span><br><span class="line">         &#123;</span><br><span class="line">        DisplayData[<span class="number">0</span>]=<span class="number">0x40</span>;       <span class="comment">//显示负号</span></span><br><span class="line">        temp=temp<span class="number">-1</span>;</span><br><span class="line">        temp=~temp;</span><br><span class="line">        tp=temp;</span><br><span class="line">        temp=tp*<span class="number">0.0625</span>*<span class="number">100</span>+<span class="number">0.5</span>;  </span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">        DisplayData[<span class="number">0</span>]=<span class="number">0x00</span>;</span><br><span class="line">        tp=temp;</span><br><span class="line">        temp=tp*<span class="number">0.0625</span>*<span class="number">100</span>+<span class="number">0.5</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        DisplayData[<span class="number">1</span>]=smgduan[temp%<span class="number">10000</span>/<span class="number">1000</span>];<span class="comment">//十位</span></span><br><span class="line">        DisplayData[<span class="number">2</span>]=smgduan[temp%<span class="number">1000</span>/<span class="number">100</span>]|<span class="number">0x80</span>;<span class="comment">//个位</span></span><br><span class="line">        DisplayData[<span class="number">3</span>]=smgduan[temp%<span class="number">100</span>/<span class="number">10</span>];   <span class="comment">//小数点后1位</span></span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DigDisplay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        u8 i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">switch</span>(i)         <span class="comment">//位选，选择点亮的数码管，</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">0</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第0位</span></span><br><span class="line">        <span class="keyword">case</span>(<span class="number">1</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第1位</span></span><br><span class="line">        <span class="keyword">case</span>(<span class="number">2</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第2位</span></span><br><span class="line">        <span class="keyword">case</span>(<span class="number">3</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;<span class="comment">//显示第3位</span></span><br><span class="line">        <span class="keyword">case</span>(<span class="number">4</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;<span class="comment">//显示第4位</span></span><br><span class="line">        <span class="keyword">case</span>(<span class="number">5</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;<span class="comment">//显示第5位</span></span><br><span class="line">        &#125;</span><br><span class="line">        P0=DisplayData[i];<span class="comment">//发送数据         改变数字显示位置</span></span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">100</span>);       <span class="comment">//间隔一段时间扫描        </span></span><br><span class="line">        P0=<span class="number">0x00</span>;        <span class="comment">//消隐</span></span><br><span class="line">        &#125;        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;        </span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        </span><br><span class="line">        datapros(Ds18b20ReadTemp());    <span class="comment">//数据处理函数</span></span><br><span class="line">        DigDisplay();       <span class="comment">//数码管显示函数        </span></span><br><span class="line">        &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>温度传感器代码temp.c部分<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"temp.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay1ms</span><span class="params">(uint y)</span>         <span class="comment">//带参数y</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uint x;</span><br><span class="line">      <span class="keyword">for</span>(;y&gt;<span class="number">0</span>;y--)       <span class="comment">//控制延时几个1ms</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">for</span>(x=<span class="number">110</span>;x&gt;<span class="number">0</span>;x--);       <span class="comment">//延时1ms</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">uchar <span class="title">Ds18b20Init</span><span class="params">()</span>        <span class="comment">//DS18B20初始化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   uchar i=<span class="number">0</span>;</span><br><span class="line">   DSPORT=<span class="number">0</span>;</span><br><span class="line">   i=<span class="number">70</span>;</span><br><span class="line">   <span class="keyword">while</span>(i--);          <span class="comment">//642us</span></span><br><span class="line">   DSPORT=<span class="number">1</span>;      <span class="comment">//拉高</span></span><br><span class="line">   i=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(DSPORT);</span><br><span class="line">   &#123;</span><br><span class="line">        Delay1ms(<span class="number">1</span>);</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">1</span>;      <span class="comment">//1存在  0不存在</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds18b20WriteByte</span><span class="params">(uchar dat)</span>       <span class="comment">//写字节时序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   uchar i,j;</span><br><span class="line">   <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">8</span>;j++)      <span class="comment">//8字节</span></span><br><span class="line">   &#123;</span><br><span class="line">           DSPORT=<span class="number">0</span>;</span><br><span class="line">        i++;      <span class="comment">//小延时</span></span><br><span class="line">        DSPORT=dat&amp;<span class="number">0x01</span>;      <span class="comment">//取最低位，与运算</span></span><br><span class="line">        i=<span class="number">6</span>;</span><br><span class="line">        <span class="keyword">while</span>(i--);       <span class="comment">//68us</span></span><br><span class="line">        DSPORT=<span class="number">1</span>;      <span class="comment">//拉高</span></span><br><span class="line">        dat&gt;&gt;=<span class="number">1</span>;      <span class="comment">//将最低位移出去，移位操作</span></span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">uchar <span class="title">Ds18b20ReadByte</span><span class="params">()</span>         <span class="comment">//读取字节</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      uint i,j;</span><br><span class="line">        uchar bi,<span class="keyword">byte</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">8</span>;j&gt;<span class="number">0</span>;j--)</span><br><span class="line">        &#123;</span><br><span class="line">          DSPORT=<span class="number">0</span>;</span><br><span class="line">      i++;         <span class="comment">//  &gt;1us</span></span><br><span class="line">      DSPORT=<span class="number">1</span>;</span><br><span class="line">      i++;         <span class="comment">//byte=1000 0000右移0100 0000   DSPORT=0；</span></span><br><span class="line">      i++;</span><br><span class="line">      bi=DSPORT;</span><br><span class="line">      <span class="keyword">byte</span>=(<span class="keyword">byte</span>&gt;&gt;<span class="number">1</span>)|(bi&lt;&lt;<span class="number">7</span>);   <span class="comment">//bi左移7位，到最高位</span></span><br><span class="line">      i=<span class="number">4</span>;</span><br><span class="line">      <span class="keyword">while</span>(i--);              <span class="comment">//45us</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">byte</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds18b20ChangeTemp</span><span class="params">()</span>       <span class="comment">//温度转换</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      Ds18b20Init();</span><br><span class="line">      Delay1ms(<span class="number">1</span>);</span><br><span class="line">      Ds18b20WriteByte(<span class="number">0xcc</span>);       <span class="comment">//开始温度转换</span></span><br><span class="line">      Ds18b20WriteByte(<span class="number">0x44</span>);       <span class="comment">//启动温度传感器转换</span></span><br><span class="line"></span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds18b20ReadTempCom</span><span class="params">()</span>      <span class="comment">//读取数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Ds18b20Init();</span><br><span class="line">      Delay1ms(<span class="number">1</span>);</span><br><span class="line">      Ds18b20WriteByte(<span class="number">0xcc</span>);       <span class="comment">//开始温度转换</span></span><br><span class="line">      Ds18b20WriteByte(<span class="number">0xBE</span>);       <span class="comment">//读取温度数据</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Ds18b20ReadTemp</span><span class="params">()</span>       <span class="comment">//真正读取温度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">   uchar tmh,tml;</span><br><span class="line">   Ds18b20ChangeTemp();</span><br><span class="line">   Ds18b20ReadTempCom();</span><br><span class="line">   tml=Ds18b20ReadByte();        <span class="comment">//低字节</span></span><br><span class="line">   tmh=Ds18b20ReadByte();         <span class="comment">//高字节</span></span><br><span class="line">   temp=tmh;        </span><br><span class="line">   temp&lt;&lt;=<span class="number">8</span>;        <span class="comment">//高8位已经过去</span></span><br><span class="line">   temp|=tml;        <span class="comment">//把温度低八位也弄进去</span></span><br><span class="line">   <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>头文件temp.h部分<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _temp_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _temp_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> uchar</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> uint                   <span class="comment">//用uint代替</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int      <span class="comment">//定义无符号整形</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">sbit DSPORT=P3^<span class="number">7</span>;          <span class="comment">//传感器I/O口对应P37</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Ds18b20ReadTemp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><ol><li>temp.c部分原理<br></li></ol></blockquote></li><li>DS18B20的初始化：<br><br>(1).数据线拉到低电平“0”。<br><br>(2).延时480微妙（该时间的时间范围可以从480到960微妙）。<br><br>(3).数据线拉到高电平“1”。<br><br>(4).延时等待80微妙。如果初始化成功则在15到60微妙时间内产生一个由DS18B20所返回的低电平“0”.根据该状态可以来确定它的存在，但是应注意不能无限的进行等待，不然会使程序进入死循环，所以要进行超时判断。<br><br>(5).若CPU读到了数据线上的低电平“0”后，还要做延时，其延时的时间从发出的高电平算起（第（3）步的时间算起）最少要480微妙。<br><br>时序图：<br><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/5.png" title="图示"></li><li>DS18B20写时序：<br><br>(1).数据线先置低电平“0”<br><br>(2).延时15微妙。<br><br>(3).按从低位到高位的顺序发送数据(一次只发送一位)。<br><br>(4).延时60微妙。<br><br>(5).将数据线拉到高电平。<br><br>(6).重复1～5步骤，直到发送完整的字节。<br><br>(7).最后将数据线拉高。<br><br>时序图：<br><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/7.png" title="图示"></li><li>DS18B20读时序：<br><br>(1).将数据线拉低“0”。<br><br>(2).延时1微妙。<br><br>(3).将数据线拉高“1”,释放总线准备读数据。<br><br>(4).延时10微妙。<br><br>(5).读数据线的状态得到1个状态位，并进行数据处理。<br><br>(6).延时45微妙。<br><br>(7).重复1～7步骤，直到读完一个字节。<br><br>时序图：<br><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/6.png" title="图示"><blockquote><ol start="2"><li>温度转换</li></ol></blockquote></li><li>这是12位转化后得到的12位数据，存储在DS18B20的两个8位的RAM中，高字节的前5位是符号位，如果测得的温度大于0，这5位为‘0’，只要将测到的数值乘以0.0625即可得到实际温度；如果温度小于0，这5位为‘1’，测到的数值需要先减1再取反再乘以0.0625即可得到实际温度。如图：<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/8.png" title="图示"><br><br>举个例子：85度=0000 0101 0101 0000<br><br>前五位为0+1x2^6+1x2^4+1x2^2+1x2^0=64+16+4+1=85.</li></ol><hr><h2 id="液晶1602显示"><a href="#液晶1602显示" class="headerlink" title="液晶1602显示"></a>液晶1602显示</h2><p>效果如图：<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/9.jpg" title="图示"></p><ol><li>主程序代码：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span>           <span class="comment">//此文件中定义了单片机的一些特殊功能寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lcd.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;         <span class="comment">//对数据类型进行声明定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">u8 Disp[]=<span class="string">"    my blog     "</span>;</span><br><span class="line">u8 Disp2[]=<span class="string">"   cjl52.top    "</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       u8 i,j;</span><br><span class="line">       LcdInit();</span><br><span class="line">       LcdWriteCom(<span class="number">0x80</span>);         <span class="comment">//设置数据指针起点：第一行</span></span><br><span class="line">       </span><br><span class="line">       <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">       &#123;</span><br><span class="line">       LcdWriteData(Disp[i]);       </span><br><span class="line">       &#125;</span><br><span class="line">       Lcd1602_Delay1ms(<span class="number">5</span>);</span><br><span class="line">       </span><br><span class="line">       LcdWriteCom(<span class="number">0x80</span>+<span class="number">0x40</span>);         <span class="comment">//设置数据指针起点：第二行</span></span><br><span class="line">       <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">16</span>;j++)</span><br><span class="line">       &#123;</span><br><span class="line">       LcdWriteData(Disp2[j]);       </span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">while</span>(<span class="number">1</span>);       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>lcd.c液晶原理代码：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lcd.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Lcd1602_Delay1ms</span><span class="params">(uint c)</span>       <span class="comment">//误差 0us          延时1ms</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uchar a,b;</span><br><span class="line">        <span class="keyword">for</span> (; c&gt;<span class="number">0</span>; c--)</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="keyword">for</span> (b=<span class="number">199</span>;b&gt;<span class="number">0</span>;b--)</span><br><span class="line">         &#123;</span><br><span class="line">                  <span class="keyword">for</span>(a=<span class="number">1</span>;a&gt;<span class="number">0</span>;a--);</span><br><span class="line">         &#125;      </span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>         LCD1602_4PINS         <span class="comment">//当没有定义这个LCD1602_4PINS时</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdWriteCom</span><span class="params">(uchar com)</span>          <span class="comment">//写入命令</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;     <span class="comment">//使能</span></span><br><span class="line">        LCD1602_RS = <span class="number">0</span>;           <span class="comment">//选择发送命令</span></span><br><span class="line">        LCD1602_RW = <span class="number">0</span>;           <span class="comment">//选择写入</span></span><br><span class="line">        </span><br><span class="line">        LCD1602_DATAPINS = com;     <span class="comment">//放入命令          P0 是LCD1602_DATAPINS </span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">1</span>);        <span class="comment">//等待数据稳定</span></span><br><span class="line"></span><br><span class="line">        LCD1602_E = <span class="number">1</span>;                  <span class="comment">//写入时序</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">5</span>);          <span class="comment">//保持时间</span></span><br><span class="line">        LCD1602_E = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdWriteCom</span><span class="params">(uchar com)</span>          <span class="comment">//写入命令</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;         <span class="comment">//使能清零</span></span><br><span class="line">        LCD1602_RS = <span class="number">0</span>;         <span class="comment">//选择写入命令</span></span><br><span class="line">        LCD1602_RW = <span class="number">0</span>;         <span class="comment">//选择写入</span></span><br><span class="line"></span><br><span class="line">        LCD1602_DATAPINS = com;        <span class="comment">//由于4位的接线是接到P0口的高四位，所以传送高四位不用改</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        LCD1602_E = <span class="number">1</span>;         <span class="comment">//写入时序</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">5</span>);</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        LCD1602_DATAPINS = com &lt;&lt; <span class="number">4</span>; <span class="comment">//发送低四位</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        LCD1602_E = <span class="number">1</span>;         <span class="comment">//写入时序</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">5</span>);</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>         LCD1602_4PINS           </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdWriteData</span><span class="params">(uchar dat)</span>        <span class="comment">//写入数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;        <span class="comment">//使能清零</span></span><br><span class="line">        LCD1602_RS = <span class="number">1</span>;        <span class="comment">//选择输入数据</span></span><br><span class="line">        LCD1602_RW = <span class="number">0</span>;        <span class="comment">//选择写入</span></span><br><span class="line"></span><br><span class="line">        LCD1602_DATAPINS = dat; <span class="comment">//写入数据</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        LCD1602_E = <span class="number">1</span>;   <span class="comment">//写入时序</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">5</span>);   <span class="comment">//保持时间</span></span><br><span class="line">        LCD1602_E = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdWriteData</span><span class="params">(uchar dat)</span>        <span class="comment">//写入数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;          <span class="comment">//使能清零</span></span><br><span class="line">        LCD1602_RS = <span class="number">1</span>;          <span class="comment">//选择写入数据</span></span><br><span class="line">        LCD1602_RW = <span class="number">0</span>;          <span class="comment">//选择写入</span></span><br><span class="line"></span><br><span class="line">        LCD1602_DATAPINS = dat;        <span class="comment">//由于4位的接线是接到P0口的高四位，所以传送高四位不用改</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        LCD1602_E = <span class="number">1</span>;          <span class="comment">//写入时序</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">5</span>);</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        LCD1602_DATAPINS = dat&lt;&lt;<span class="number">4</span>; <span class="comment">//写入低四位</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        LCD1602_E = <span class="number">1</span>;          <span class="comment">//写入时序</span></span><br><span class="line">        Lcd1602_Delay1ms(<span class="number">5</span>);</span><br><span class="line">        LCD1602_E = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">         </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>        LCD1602_4PINS</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdInit</span><span class="params">()</span>          <span class="comment">//LCD初始化子程序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">         LcdWriteCom(<span class="number">0x38</span>);  <span class="comment">//开显示</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x0c</span>);  <span class="comment">//开显示不显示光标</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x06</span>);  <span class="comment">//写一个指针加1</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x01</span>);  <span class="comment">//清屏</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x80</span>);  <span class="comment">//设置数据指针起点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdInit</span><span class="params">()</span>          <span class="comment">//LCD初始化子程序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        LcdWriteCom(<span class="number">0x32</span>);         <span class="comment">//将8位总线转为4位总线</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x28</span>);         <span class="comment">//在四位线下的初始化</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x0c</span>);  <span class="comment">//开显示不显示光标</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x06</span>);  <span class="comment">//写一个指针加1</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x01</span>);  <span class="comment">//清屏</span></span><br><span class="line">        LcdWriteCom(<span class="number">0x80</span>);  <span class="comment">//设置数据指针起点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></li><li>lcd.h头文件代码：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __LCD_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LCD_H_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define LCD1602_4PINS     当使用的是4位数据传输的时候定义，就是有转接板（像TTL-USB）,使用8位取消这个定义(有转接板定义，无转接板注释掉)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> uchar</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> uint </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD1602_DATAPINS P0    <span class="comment">//定义接口</span></span></span><br><span class="line">sbit LCD1602_E=P2^<span class="number">7</span>;</span><br><span class="line">sbit LCD1602_RW=P2^<span class="number">5</span>;</span><br><span class="line">sbit LCD1602_RS=P2^<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Lcd1602_Delay1ms</span><span class="params">(uint c)</span></span>;   <span class="comment">//误差 0us</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdWriteCom</span><span class="params">(uchar com)</span></span>;    <span class="comment">//LCD1602写入8位命令子函数</span></span><br><span class="line">                </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdWriteData</span><span class="params">(uchar dat)</span></span>;   <span class="comment">//LCD1602写入8位数据子函数</span></span><br><span class="line">                </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LcdInit</span><span class="params">()</span></span>;                         <span class="comment">//LCD1602初始化子程序                           </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>原理PPT里的知识很多，我找到了网上一篇精简的（懒人行为）：<a href="https://wenku.baidu.com/view/435c3ba0284ac850ad024299.html" target="_blank" rel="noopener">液晶1602原理</a>.</p></blockquote></li></ol><hr><h2 id="红外原理"><a href="#红外原理" class="headerlink" title="红外原理"></a>红外原理</h2><p>实验现象：按遥控器上某按键会显示其按键的16进制数据码。如图:<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/10.jpg" title="图示"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span>                          <span class="comment">//此文件中定义了单片机的一些特殊功能寄存器</span></span></span><br><span class="line">                </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;                  <span class="comment">//对数据类型进行声明定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">sbit LSA=P2^<span class="number">2</span>;                   <span class="comment">//之前的38译码器</span></span><br><span class="line">sbit LSB=P2^<span class="number">3</span>;</span><br><span class="line">sbit LSC=P2^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">sbit IRIN=P3^<span class="number">2</span>;                 <span class="comment">//P32口为数据传输口</span></span><br><span class="line"></span><br><span class="line">u8 IrValue[<span class="number">6</span>];</span><br><span class="line">u8 Time;</span><br><span class="line"></span><br><span class="line">u8 DisplayData[<span class="number">8</span>];</span><br><span class="line">u8 code smgduan[<span class="number">17</span>]=&#123;</span><br><span class="line"><span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,</span><br><span class="line"><span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x77</span>,<span class="number">0x7c</span>,<span class="number">0x39</span>,<span class="number">0x5e</span>,<span class="number">0x79</span>,<span class="number">0x71</span>,<span class="number">0X76</span>&#125;;     <span class="comment">//0、1、2、3、4、5、6、7、8、9、A、b、C、d、E、F、H的显示码</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(i--);                </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DigDisplay</span><span class="params">()</span>                <span class="comment">//之前的数码管显示</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">                u8 i;</span><br><span class="line">                <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">                &#123;</span><br><span class="line">         <span class="keyword">switch</span>(i)                    <span class="comment">//位选，选择点亮的数码管，</span></span><br><span class="line">         &#123;</span><br><span class="line">                         <span class="keyword">case</span>(<span class="number">0</span>):</span><br><span class="line">         LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;   <span class="comment">//显示第0位                </span></span><br><span class="line">                         <span class="keyword">case</span>(<span class="number">1</span>):</span><br><span class="line">         LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;   <span class="comment">//显示第1位</span></span><br><span class="line">                         <span class="keyword">case</span>(<span class="number">2</span>):</span><br><span class="line">         LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;   <span class="comment">//显示第2位 </span></span><br><span class="line">         &#125;</span><br><span class="line">         P0=DisplayData[i];<span class="comment">//发送数据</span></span><br><span class="line">         <span class="built_in">delay</span>(<span class="number">100</span>); <span class="comment">//间隔一段时间扫描                </span></span><br><span class="line">         P0=<span class="number">0x00</span>;<span class="comment">//消隐</span></span><br><span class="line">                &#125;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IrInit</span><span class="params">()</span>                <span class="comment">//初始化，因为P32口也是外部中断0的接口</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">                IT0=<span class="number">1</span>;  <span class="comment">//下降沿触发</span></span><br><span class="line">                EX0=<span class="number">1</span>;  <span class="comment">//打开中断0允许</span></span><br><span class="line">                EA=<span class="number">1</span>;                <span class="comment">//打开总中断</span></span><br><span class="line"></span><br><span class="line">                IRIN=<span class="number">1</span>; <span class="comment">//初始化端口 上拉高电平</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;                </span><br><span class="line">                IrInit(); </span><br><span class="line">                <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">                &#123;                </span><br><span class="line">         DisplayData[<span class="number">0</span>] = smgduan[IrValue[<span class="number">2</span>]/<span class="number">16</span>]; <span class="comment">//÷16得到16进制高位</span></span><br><span class="line">         DisplayData[<span class="number">1</span>] = smgduan[IrValue[<span class="number">2</span>]%<span class="number">16</span>]; <span class="comment">//%16得到16进制低位</span></span><br><span class="line">         DisplayData[<span class="number">2</span>] = smgduan[<span class="number">16</span>];           <span class="comment">// 显示H，表示16进制表示数</span></span><br><span class="line">                 DigDisplay();                       <span class="comment">//引用数码管显示</span></span><br><span class="line">                &#125;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadIr</span><span class="params">()</span> interrupt 0              <span class="comment">//外部中断函数定义，注意中断号</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">                u8 j,k;          <span class="comment">//定义变量</span></span><br><span class="line">                u16 err;         </span><br><span class="line">                Time=<span class="number">0</span>;         <span class="comment">//时间变量                          </span></span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">700</span>);                <span class="comment">//7ms  起始码</span></span><br><span class="line">                <span class="keyword">if</span>(IRIN==<span class="number">0</span>)         <span class="comment">//确认是否真的接收到正确的信号</span></span><br><span class="line">                &#123;                 </span><br><span class="line">         </span><br><span class="line">         err=<span class="number">1000</span>;         <span class="comment">//1000*10us=10ms,超过说明接收到错误的信号</span></span><br><span class="line"></span><br><span class="line">         <span class="keyword">while</span>((IRIN==<span class="number">0</span>)&amp;&amp;(err&gt;<span class="number">0</span>))                <span class="comment">//等待前面9ms的低电平过去           </span></span><br><span class="line">         &#123;                         </span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">1</span>);                   <span class="comment">//10us</span></span><br><span class="line">                err--;             <span class="comment">//10us*1000=10000us=10ms</span></span><br><span class="line">         &#125; </span><br><span class="line">         <span class="keyword">if</span>(IRIN==<span class="number">1</span>)                         <span class="comment">//如果正确等到9ms低电平</span></span><br><span class="line">         &#123;</span><br><span class="line">        err=<span class="number">500</span>;</span><br><span class="line">        <span class="keyword">while</span>((IRIN==<span class="number">1</span>)&amp;&amp;(err&gt;<span class="number">0</span>))    <span class="comment">//等待4.5ms的起始高电平过去</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">1</span>);</span><br><span class="line">                 err--;            <span class="comment">//5ms 后强制退出</span></span><br><span class="line">        &#125;</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)         <span class="comment">//共有4组数据  4个字节数据码</span></span><br><span class="line">                &#123;         </span><br><span class="line">                <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">8</span>;j++)                <span class="comment">//接收一组数据 4*8=32</span></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                err=<span class="number">60</span>;         </span><br><span class="line">                <span class="keyword">while</span>((IRIN==<span class="number">0</span>)&amp;&amp;(err&gt;<span class="number">0</span>))<span class="comment">//等待信号前面的560us低电平过去</span></span><br><span class="line">                &#123;                       <span class="comment">//PPM脉冲调制方式</span></span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">1</span>);           <span class="comment">//10us</span></span><br><span class="line">                err--;           <span class="comment">//60*10=600us</span></span><br><span class="line">                &#125;</span><br><span class="line">                err=<span class="number">500</span>;</span><br><span class="line">                <span class="keyword">while</span>((IRIN==<span class="number">1</span>)&amp;&amp;(err&gt;<span class="number">0</span>))                 <span class="comment">//计算高电平的时间长度。</span></span><br><span class="line">                &#123;</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">10</span>);                 <span class="comment">//0.1ms</span></span><br><span class="line">                Time++;</span><br><span class="line">                err--;</span><br><span class="line">                <span class="keyword">if</span>(Time&gt;<span class="number">30</span>)         <span class="comment">//若高电平时间超过3ms,强制退出（失败） </span></span><br><span class="line">                &#123;</span><br><span class="line">                   <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                IrValue[k]&gt;&gt;=<span class="number">1</span>;                    <span class="comment">//k表示第几组数据</span></span><br><span class="line">                <span class="keyword">if</span>(Time&gt;=<span class="number">8</span>)                         <span class="comment">//如果高电平出现大于565us，那么是1</span></span><br><span class="line">                &#123;</span><br><span class="line">                IrValue[k]|=<span class="number">0x80</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Time=<span class="number">0</span>;         <span class="comment">//用完时间要重新赋值                         </span></span><br><span class="line">                &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(IrValue[<span class="number">2</span>]!=~IrValue[<span class="number">3</span>])   <span class="comment">//验证数据码与数据反码，验证是否正确，错误就退出</span></span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                      &#125;                         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理：</p><ol><li>红外发送装置发出二进制脉冲码，程序里的是PPM码（脉冲位置调制码，脉冲串之间的时间间隔来实现信号调制）。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/11.png" title="图示">,可以看出：用户码或数据码中的每一个位可以是位 ‘1’ ，也可以是位 ‘0’。区分 ‘0’和 ‘1’是利用脉冲的时间间隔来区分，这种编码方式称为脉冲位置调制方式。</li><li>数据格式包括了引导码、用户码、数据码和数据码反码，编码总占32位。数据反码是数据码反相后的编码，编码时可用于对数据的纠错。注意：第二段的用户码也可以在遥控应用电路中被设置成第一段用户码的反码。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/12.png" title="图示"></li></ol><blockquote><p>所为遥控器其实是个红外发送装置，单片机上的为红外接受装置。发射装置已经完备封装在遥控器内，所以我们做的就是写红外接收的程序代码。</p></blockquote><p>根据遥控器上每个按键的二进制脉冲码的不同，可以设计很多小玩意，比如遥控器控制LED灯（我已经自己实践过，挺好玩！）。所以得知道每个按键的二进制脉冲码，根据上面的实验其实可以弄出来，这里给个总结的表格。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/13.png" title="图示"></p><table><tr><td>45H</td><td>46H</td><td>47H</td></tr><tr><td>44H</td><td>40H</td><td>43H</td></tr><tr><td>07H</td><td>15H</td><td>09H</td></tr><tr><td>16H</td><td>19H</td><td>0DH</td></tr><tr><td>0CH</td><td>18H</td><td>5EH</td></tr><tr><td>08H</td><td>1CH</td><td>5AH</td></tr><tr><td>42H</td><td>52H</td><td>4AH</td></tr></table><hr><h2 id="DS1302时钟"><a href="#DS1302时钟" class="headerlink" title="DS1302时钟"></a>DS1302时钟</h2><p>DS1302实时时钟具有能计算2100年之前的秒、分、时、日、日期、星期、月、年的能力，还有闰年调整的能力。<br>主函数main.c代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span>                </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ds1302.h"</span>                </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;                  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">sbit LSA=P2^<span class="number">2</span>;              <span class="comment">//数码管38译码用</span></span><br><span class="line">sbit LSB=P2^<span class="number">3</span>;</span><br><span class="line">sbit LSC=P2^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> num=<span class="number">0</span>;</span><br><span class="line">u8 DisplayData[<span class="number">8</span>];</span><br><span class="line">u8 code smgduan[<span class="number">10</span>]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;; <span class="comment">//显示数字0-9</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">while</span>(i--);                </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">datapros</span><span class="params">()</span>         <span class="comment">//数据处理转换函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        Ds1302ReadTime();</span><br><span class="line">        DisplayData[<span class="number">0</span>] = smgduan[TIME[<span class="number">2</span>]/<span class="number">16</span>];         <span class="comment">//时    </span></span><br><span class="line">        DisplayData[<span class="number">1</span>] = smgduan[TIME[<span class="number">2</span>]&amp;<span class="number">0x0f</span>];                 </span><br><span class="line">        DisplayData[<span class="number">2</span>] = <span class="number">0x40</span>;</span><br><span class="line">        DisplayData[<span class="number">3</span>] = smgduan[TIME[<span class="number">1</span>]/<span class="number">16</span>];         <span class="comment">//分       </span></span><br><span class="line">        DisplayData[<span class="number">4</span>] = smgduan[TIME[<span class="number">1</span>]&amp;<span class="number">0x0f</span>];                </span><br><span class="line">        DisplayData[<span class="number">5</span>] = <span class="number">0x40</span>;</span><br><span class="line">        DisplayData[<span class="number">6</span>] = smgduan[TIME[<span class="number">0</span>]/<span class="number">16</span>];         <span class="comment">//秒       </span></span><br><span class="line">        DisplayData[<span class="number">7</span>] = smgduan[TIME[<span class="number">0</span>]&amp;<span class="number">0x0f</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DigDisplay</span><span class="params">()</span>         <span class="comment">//显示数码管</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        u8 i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">switch</span>(i)                 </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">0</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">1</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">2</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">3</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">4</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span>(<span class="number">5</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">6</span>):</span><br><span class="line">        LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">7</span>):</span><br><span class="line">        LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        P0=DisplayData[i];</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">100</span>); </span><br><span class="line">        P0=<span class="number">0x00</span>;</span><br><span class="line">        &#125;                </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;                </span><br><span class="line">        <span class="comment">//Ds1302Init();    //第一次初始化后就可以注释该条语句，这样下次重启就不会再次初始化了       </span></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        datapros();                </span><br><span class="line">        DigDisplay();                </span><br><span class="line">        &#125;                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模块DS1302.c的代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"ds1302.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//---DS1302写入和读取时分秒的地址命令---//</span></span><br><span class="line"><span class="comment">//---秒分时日月周年 最低位读写位;-------//</span></span><br><span class="line">uchar code READ_RTC_ADDR[<span class="number">7</span>] = &#123;<span class="number">0x81</span>, <span class="number">0x83</span>, <span class="number">0x85</span>, <span class="number">0x87</span>, <span class="number">0x89</span>, <span class="number">0x8b</span>, <span class="number">0x8d</span>&#125;; </span><br><span class="line">uchar code WRITE_RTC_ADDR[<span class="number">7</span>] = &#123;<span class="number">0x80</span>, <span class="number">0x82</span>, <span class="number">0x84</span>, <span class="number">0x86</span>, <span class="number">0x88</span>, <span class="number">0x8a</span>, <span class="number">0x8c</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//---DS1302时钟初始化2016年5月7日星期六12点00分00秒。---//</span></span><br><span class="line"><span class="comment">//---存储顺序是秒分时日月周年,存储格式是用BCD码---//</span></span><br><span class="line">uchar TIME[<span class="number">7</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0x12</span>, <span class="number">0x07</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x16</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds1302Write</span><span class="params">(uchar addr, uchar dat)</span>   <span class="comment">//向DS1302命令（地址+数据）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       uchar n;</span><br><span class="line">       RST = <span class="number">0</span>;</span><br><span class="line">       _nop_();</span><br><span class="line"></span><br><span class="line">       SCLK = <span class="number">0</span>;   <span class="comment">//先将SCLK置低电平。</span></span><br><span class="line">       _nop_();</span><br><span class="line">       RST = <span class="number">1</span>;   <span class="comment">//然后将RST(CE)置高电平。</span></span><br><span class="line">       _nop_();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (n=<span class="number">0</span>; n&lt;<span class="number">8</span>; n++)       <span class="comment">//开始传送八位地址命令</span></span><br><span class="line">       &#123;</span><br><span class="line">       DSIO = addr &amp; <span class="number">0x01</span>;   <span class="comment">//数据从低位开始传送</span></span><br><span class="line">       addr &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">       SCLK = <span class="number">1</span>;      <span class="comment">//数据在上升沿时，DS1302读取数据</span></span><br><span class="line">       _nop_();</span><br><span class="line">       SCLK = <span class="number">0</span>;</span><br><span class="line">       _nop_();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (n=<span class="number">0</span>; n&lt;<span class="number">8</span>; n++)     <span class="comment">//写入8位数据</span></span><br><span class="line">       &#123;</span><br><span class="line">       DSIO = dat &amp; <span class="number">0x01</span>;</span><br><span class="line">       dat &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">       SCLK = <span class="number">1</span>;      <span class="comment">//数据在上升沿时，DS1302读取数据</span></span><br><span class="line">       _nop_();</span><br><span class="line">       SCLK = <span class="number">0</span>;</span><br><span class="line">       _nop_();       </span><br><span class="line">       &#125;       </span><br><span class="line">        </span><br><span class="line">       RST = <span class="number">0</span>;         <span class="comment">//传送数据结束</span></span><br><span class="line">       _nop_();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">uchar <span class="title">Ds1302Read</span><span class="params">(uchar addr)</span>      <span class="comment">//读取一个地址的数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       uchar n,dat,dat1;</span><br><span class="line">       RST = <span class="number">0</span>;</span><br><span class="line">       _nop_();</span><br><span class="line"></span><br><span class="line">       SCLK = <span class="number">0</span>;           <span class="comment">//先将SCLK置低电平。</span></span><br><span class="line">       _nop_();</span><br><span class="line">       RST = <span class="number">1</span>;               <span class="comment">//然后将RST(CE)置高电平。</span></span><br><span class="line">       _nop_();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(n=<span class="number">0</span>; n&lt;<span class="number">8</span>; n++)            <span class="comment">//开始传送八位地址命令</span></span><br><span class="line">       &#123;</span><br><span class="line">       DSIO = addr &amp; <span class="number">0x01</span>;       <span class="comment">//数据从低位开始传送</span></span><br><span class="line">       addr &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">       SCLK = <span class="number">1</span>;             <span class="comment">//数据在上升沿时，DS1302读取数据</span></span><br><span class="line">       _nop_();</span><br><span class="line">       SCLK = <span class="number">0</span>;             <span class="comment">//DS1302下降沿时，放置数据</span></span><br><span class="line">       _nop_();</span><br><span class="line">       &#125;</span><br><span class="line">       _nop_();</span><br><span class="line">       <span class="keyword">for</span>(n=<span class="number">0</span>; n&lt;<span class="number">8</span>; n++)              <span class="comment">//读取8位数据</span></span><br><span class="line">       &#123;</span><br><span class="line">       dat1 = DSIO;           <span class="comment">//从最低位开始接收</span></span><br><span class="line">       dat = (dat&gt;&gt;<span class="number">1</span>) | (dat1&lt;&lt;<span class="number">7</span>);</span><br><span class="line">       SCLK = <span class="number">1</span>;</span><br><span class="line">       _nop_();</span><br><span class="line">       SCLK = <span class="number">0</span>;           <span class="comment">//DS1302下降沿时，放置数据</span></span><br><span class="line">       _nop_();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       RST = <span class="number">0</span>;</span><br><span class="line">       _nop_();              <span class="comment">//以下为DS1302复位的稳定时间,必须的。</span></span><br><span class="line">       SCLK = <span class="number">1</span>;</span><br><span class="line">       _nop_();</span><br><span class="line">       DSIO = <span class="number">0</span>;</span><br><span class="line">       _nop_();</span><br><span class="line">       DSIO = <span class="number">1</span>;</span><br><span class="line">       _nop_();</span><br><span class="line">       <span class="keyword">return</span> dat;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds1302Init</span><span class="params">()</span>         <span class="comment">//初始化DS1302</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       uchar n;</span><br><span class="line">       Ds1302Write(<span class="number">0x8E</span>,<span class="number">0X00</span>);        <span class="comment">//禁止写保护，就是关闭写保护功能</span></span><br><span class="line">       <span class="keyword">for</span> (n=<span class="number">0</span>; n&lt;<span class="number">7</span>; n++)           <span class="comment">//写入7个字节的时钟信号：分秒时日月周年</span></span><br><span class="line">       &#123;</span><br><span class="line">       Ds1302Write(WRITE_RTC_ADDR[n],TIME[n]);       </span><br><span class="line">       &#125;</span><br><span class="line">       Ds1302Write(<span class="number">0x8E</span>,<span class="number">0x80</span>);        <span class="comment">//打开写保护功能</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds1302ReadTime</span><span class="params">()</span>             <span class="comment">//读取时钟信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       uchar n;</span><br><span class="line">       <span class="keyword">for</span> (n=<span class="number">0</span>; n&lt;<span class="number">7</span>; n++)      <span class="comment">//读取7个字节的时钟信号：分秒时日月周年</span></span><br><span class="line">       &#123;</span><br><span class="line">       TIME[n] = Ds1302Read(READ_RTC_ADDR[n]);</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>头文件DS1302.h代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __DS1302_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __DS1302_H_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;reg52.h&gt;     //头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> uchar          <span class="comment">//重定义关键词</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> uint </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">sbit DSIO=P3^<span class="number">4</span>;</span><br><span class="line">sbit RST=P3^<span class="number">5</span>;</span><br><span class="line">sbit SCLK=P3^<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds1302Write</span><span class="params">(uchar addr, uchar dat)</span></span>;</span><br><span class="line"><span class="function">uchar <span class="title">Ds1302Read</span><span class="params">(uchar addr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds1302Init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ds1302ReadTime</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> uchar TIME[<span class="number">7</span>];       <span class="comment">//加入全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>读写时序原理图：</p></blockquote><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA2/14.png" title="图示"><blockquote><p>DS1302寄存器和RAM：<br></p></blockquote><p>1．控制寄存器</p><table><tr><td>D7</td><td>D6</td><td>D5</td><td>D4</td><td>D3</td><td>D2</td><td>D1</td><td>D0</td></tr><tr><td>1</td><td>RAM/CK</td><td>A4</td><td>A3</td><td>A2</td><td>A1</td><td>A0</td><td>RD/W</td></tr></table><p>D7：固定为1<br><br>D6：RAM/CK位，=1片内RAM，=0日历、时钟寄存器选择位。<br><br>D5~D1：地址位，用于选择进行读写的日历、时钟寄存器或片内RAM。对日历、时钟寄存器或片内RAM的选择见表。<br><br>D0： 读写选择，=0写，=1读<br></p><blockquote><p>还有时钟日期寄存器，比较多，可以自己搜。</p></blockquote><hr>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title>初学单片机1</title>
    <url>/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>通过下载的资料文件，今天开始了正式的学习过程，型号是“普中51-单核-A2”，也是我推荐里配图的那个。<a id="more"></a>具体的内容资料里都有，身患懒癌，所以只记录自己学习是遇到的自以为的重点。</p><hr><h2 id="单片机需要什么基础"><a href="#单片机需要什么基础" class="headerlink" title="单片机需要什么基础"></a>单片机需要什么基础</h2><p>1、单片机与以前所学的知识关联很少；<br>2、只需要掌握很基本的数电模电知识，如二进制、十进制、十六进制之间的转换，与、或、非逻辑关系等；<br>3、对各种器件的概念基本上是从0开始；<br>4、如果要用C语言编程，需具备简单的C语言基础；</p><hr><h2 id="C51的数据类型扩充定义"><a href="#C51的数据类型扩充定义" class="headerlink" title="C51的数据类型扩充定义"></a>C51的数据类型扩充定义</h2><p>sfr: 特殊功能寄存器声明<br>sfr16: sfr的16位数据声明<br>sbit: 特殊功能位声明（<em>用处很多，许多引脚都相关</em>，例如，sbit led=P2^0,此处将引脚P20定义为led，后面点亮第一个led灯有所涉及。）<br>bit: 位变量声明</p><hr><h2 id="点亮第一个LED灯"><a href="#点亮第一个LED灯" class="headerlink" title="点亮第一个LED灯"></a>点亮第一个LED灯</h2><p>代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"></span><br><span class="line">sbit led=P2^<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  led=<span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>视频里说道，D1-D8一共8个led灯，分别对应P20-P27的8个引脚，从阳极至阴极，在引脚这边阴极和VCC那边阳极的时候，二极管才能发光，这也符合单向导通性。在keil4中建立好工程<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/1.jpg" title="图示"><br>确认编译完成并生成hex文件，然后连接好PC与单片机，打开资料里的烧入软件。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/0.png" title="图示"><br>点击“打开文件”，找到工程的hex文件，最后点击“程序下载”。（如果出现烧入不成功的错误可以去我的博客-初学单片机的障碍-里面瞅瞅有没有解决方法。<br>效果如下：<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/2.jpg" title="图示"><br></p><hr><h2 id="LED闪烁"><a href="#LED闪烁" class="headerlink" title="LED闪烁"></a>LED闪烁</h2><p>代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;  <span class="comment">//0-255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;  <span class="comment">//0-65535</span></span><br><span class="line"></span><br><span class="line">sbit led=P2^<span class="number">0</span>;       <span class="comment">//D1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(i--);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    led=<span class="number">0</span>;        <span class="comment">//点亮 </span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50000</span>);<span class="comment">//450ms</span></span><br><span class="line">    led=<span class="number">1</span>;    <span class="comment">//熄灭</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50000</span>);<span class="comment">//450ms</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在点亮第一个LED灯的基础上，加入延时函数，其实就是为了使灯类似于“跳动”能让你看到。同样的保存hex，然后下载，发现D1灯闪烁，通过在keil4中的调试，大致一亮一灭0.9秒。</p><hr><h2 id="LED灯流水灯"><a href="#LED灯流水灯" class="headerlink" title="LED灯流水灯"></a>LED灯流水灯</h2><p>代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"intrins.h"</span>        <span class="comment">//左移右移的头文件</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;  <span class="comment">//0-255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;  <span class="comment">//0-65535</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> led P2            <span class="comment">//将P2引脚全部定义为led，也就是8个灯</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(i--);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i=<span class="number">0</span>;                <span class="comment">//定义</span></span><br><span class="line">  led=<span class="number">0xfe</span>;               <span class="comment">//1111 1110</span></span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++) <span class="comment">//7次</span></span><br><span class="line">  &#123;</span><br><span class="line">    led=_crol_(led,<span class="number">1</span>);  <span class="comment">//左移  1111 1101  1111 1011</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50000</span>);  <span class="comment">//延时，让你能看见</span></span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    led=_cror_(led,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里运用到了左移右移的方法，同时也要注意头文件的引入，不然会编译错误。#define定义也有运用，方便程序的运行。</p><blockquote><p>重点是，定义P2，包含了8个LED灯，在一开始定义led时，0xfe=1111 1110,之前讲过P2^…的引脚为低电平时才亮，此时高位一直到倒数第二位（P27-P21不亮，P1亮）。</p></blockquote><hr><h2 id="蜂鸣器"><a href="#蜂鸣器" class="headerlink" title="蜂鸣器"></a>蜂鸣器</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line">      </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16; </span><br><span class="line"> </span><br><span class="line">sbit <span class="built_in">beep</span>=P1^<span class="number">5</span>;    </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(i--);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">            </span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="built_in">beep</span>=~<span class="built_in">beep</span>;   <span class="comment">//高低电平不断变化</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>);    <span class="comment">//1000us</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.改变单片机引脚输出波形的频率，可以调整控制蜂鸣器音调<br>2.改变输出电平的高低电平占空比，可以控制蜂鸣器的声音大小<br>3.51单片机上的蜂鸣器是无源蜂鸣器，也就是需要一定的频率脉冲才能工作，不像有源蜂鸣器，P1^5接入低电平即可。<br>4.可以发现延时函数的值调的越小（频率高），声音越尖锐；值越高（频率越低），声音越重，甚至哒哒哒的，更甚至没声音。</p><blockquote><p>通过调节频率，可以调出任何音调，按道理也就是说调调可以任意调，比如生日歌。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;reg51.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></span><br><span class="line"></span><br><span class="line">sbit <span class="built_in">beep</span> = P1^<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">uchar code SONG_TONE[]=&#123;<span class="number">212</span>,<span class="number">212</span>,<span class="number">190</span>,<span class="number">212</span>,<span class="number">159</span>,<span class="number">169</span>,<span class="number">212</span>,<span class="number">212</span>,<span class="number">190</span>,<span class="number">212</span>,<span class="number">142</span>,<span class="number">159</span>,</span><br><span class="line"><span class="number">212</span>,<span class="number">212</span>,<span class="number">106</span>,<span class="number">126</span>,<span class="number">159</span>,<span class="number">169</span>,<span class="number">190</span>,<span class="number">119</span>,<span class="number">119</span>,<span class="number">126</span>,<span class="number">159</span>,<span class="number">142</span>,<span class="number">159</span>,<span class="number">0</span>&#125;;</span><br><span class="line">uchar code SONG_LONG[]=&#123;<span class="number">9</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">24</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">24</span>,</span><br><span class="line"><span class="number">9</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">24</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//延时函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DelayMS</span><span class="params">(uint x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     uchar t;</span><br><span class="line">     <span class="keyword">while</span>(x--) <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">120</span>;t++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制音频、节拍函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PlayMusic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     uint i=<span class="number">0</span>,j,k;</span><br><span class="line">     <span class="keyword">while</span>(SONG_LONG[i]!=<span class="number">0</span>||SONG_TONE[i]!=<span class="number">0</span>)</span><br><span class="line"> &#123;   </span><br><span class="line">     <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;SONG_LONG[i]*<span class="number">20</span>;j++)  <span class="comment">//播放各个音符，SONG_LONG 为拍子长度</span></span><br><span class="line">   &#123;</span><br><span class="line">         <span class="built_in">beep</span>=~<span class="built_in">beep</span>;</span><br><span class="line">         <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;SONG_TONE[i]/<span class="number">3</span>;k++);<span class="comment">//SONG_TONE 延时表决定了每个音符的频率</span></span><br><span class="line">   &#125;</span><br><span class="line">    DelayMS(<span class="number">10</span>);</span><br><span class="line">    i++;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">beep</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        PlayMusic(); <span class="comment">//播放生日快乐</span></span><br><span class="line">        DelayMS(<span class="number">500</span>); <span class="comment">//播放完后暂停一段时间</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是从网上粘贴的生日歌的代码，（先放在这，等我研究完，会了再回来写，我还是太菜）。</p><hr><h2 id="静态数码管"><a href="#静态数码管" class="headerlink" title="静态数码管"></a>静态数码管</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line"> u8 code smgduan[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x77</span>,<span class="number">0x7c</span>,</span><br><span class="line"> <span class="number">0x39</span>,<span class="number">0x5e</span>,<span class="number">0x79</span>,<span class="number">0x71</span>&#125;;   <span class="comment">//code 存放flash，rom</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  P0=smgduan[<span class="number">1</span>];<span class="comment">// 0x06-0000 0110对应b,c高电平共阴极</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)        <span class="comment">//显示数字1</span></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态数码管的原理，如果是扫码下载的资料可能没有，这里给出链接：<a href="https://www.bilibili.com/video/BV1NW411r7bu?p=22" target="_blank" rel="noopener">数码管</a><br>。我们这里的51单片机是共阴极，所以接口端需要高电平。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/3.jpg" title="图示"></p><blockquote><p>这里强调的是，数码管静态和动态的学习，最好预备有数字电路和模拟电路的基础（数电模电）。不然光看原理可能都一头雾水，我也是学过一些课程所以略有领会。</p></blockquote><p>选择P0端口，其8位引脚分别对应着数码管上的a-g还有小数点。低位对应a，以此类推。16进制数也需要熟悉。</p><hr><h2 id="动态数码管"><a href="#动态数码管" class="headerlink" title="动态数码管"></a>动态数码管</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;</span><br><span class="line"></span><br><span class="line">sbit LSA=P2^<span class="number">2</span>;  <span class="comment">//38译码器</span></span><br><span class="line">sbit LSB=P2^<span class="number">3</span>;</span><br><span class="line">sbit LSC=P2^<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"> u8 code smgduan[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x77</span>,<span class="number">0x7c</span>,</span><br><span class="line"> <span class="number">0x39</span>,<span class="number">0x5e</span>,<span class="number">0x79</span>,<span class="number">0x71</span>&#125;;   <span class="comment">//code 存放flash，ROM.共阴极的16进制对应数码管</span></span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(i--);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">DigDisplay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">  u8 i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">switch</span>(i)</span><br><span class="line">   &#123;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">       LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>;<span class="keyword">break</span>;    <span class="comment">//000 -0</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">     LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">0</span>;<span class="keyword">break</span>;<span class="comment">//001 -1</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>;<span class="keyword">break</span>;<span class="comment">//010 -2</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">     LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">0</span>;<span class="keyword">break</span>;<span class="comment">//011 -3</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">     LSA=<span class="number">0</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>;<span class="keyword">break</span>;    <span class="comment">//100 -4</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">     LSA=<span class="number">1</span>;LSB=<span class="number">0</span>;LSC=<span class="number">1</span>;<span class="keyword">break</span>;<span class="comment">//101 -5</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    LSA=<span class="number">0</span>;LSB=<span class="number">1</span>;LSC=<span class="number">1</span>;<span class="keyword">break</span>;<span class="comment">//110 -6</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    LSA=<span class="number">1</span>;LSB=<span class="number">1</span>;LSC=<span class="number">1</span>;<span class="keyword">break</span>;<span class="comment">//111 -7</span></span><br><span class="line">&#125;</span><br><span class="line">P0=smgduan[i];</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">100</span>);      <span class="comment">// 1 ms</span></span><br><span class="line">P0=<span class="number">0x00</span>;        <span class="comment">//清零</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">   DigDisplay();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>懒癌犯了，视频里解析很清楚，我的理解度可能也没有很深。值得注意的是，与视频中不一样的地方，他的8个LED灯全亮，我的只对应P2^2,P2^3,P2^4三个LED灯，三个引脚，这三个也是控制38译码器的那三个脚。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/4.jpg" title="图示">。</p><hr><h2 id="独立按键控制LED"><a href="#独立按键控制LED" class="headerlink" title="独立按键控制LED"></a>独立按键控制LED</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;  <span class="comment">//0-255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;  <span class="comment">//0-65535</span></span><br><span class="line"></span><br><span class="line">sbit led=P2^<span class="number">0</span>;</span><br><span class="line">sbit k1=P3^<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(i--);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keypros</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(k1==<span class="number">0</span>)   <span class="comment">//按下  低电平通</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);<span class="comment">//10ms ，消抖</span></span><br><span class="line">   <span class="keyword">if</span>(k1==<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">   led=~led; <span class="comment">//取反，低电平有效</span></span><br><span class="line">   &#125;</span><br><span class="line">     <span class="keyword">while</span>(!k1);<span class="comment">//松开 高电平无效</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line">   keypros();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>独立按键的对应：K1-P3^1 ; K2-P3^0 ; K3-P3^2 ; K4-P3^3 ;具体的原理看视频，代码中的keypros()方法就是讲述按下独立按键，消抖操作，按下LED取反亮，然后松开操作while(!K1)。总体不难理解。</p><hr><h2 id="矩阵按键控制数码管"><a href="#矩阵按键控制数码管" class="headerlink" title="矩阵按键控制数码管"></a>矩阵按键控制数码管</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"reg52.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIO_DIG P0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GPIO_KEY P1</span></span><br><span class="line"></span><br><span class="line"> u8 code smgduan[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x77</span>,<span class="number">0x7c</span>,</span><br><span class="line"> <span class="number">0x39</span>,<span class="number">0x5e</span>,<span class="number">0x79</span>,<span class="number">0x71</span>&#125;;   <span class="comment">//code 存放flash，rom</span></span><br><span class="line"></span><br><span class="line"> u8 KeyValue;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(i--);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">KeyDown</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a=<span class="number">0</span>;</span><br><span class="line">GPIO_KEY=<span class="number">0x0f</span>;<span class="comment">//0000 1111  先给高电平0低电平1</span></span><br><span class="line"><span class="keyword">if</span>(GPIO_KEY!=<span class="number">0x0f</span>) <span class="comment">//按下某开关后</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">switch</span>(GPIO_KEY)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0x07</span>): KeyValue=<span class="number">0</span>;<span class="keyword">break</span>;   <span class="comment">//0000 0111 第一列</span></span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0x0b</span>): KeyValue=<span class="number">1</span>;<span class="keyword">break</span>;   <span class="comment">//0000 1011 第二列</span></span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0x0d</span>): KeyValue=<span class="number">2</span>;<span class="keyword">break</span>;   <span class="comment">//0000 1101 第三列</span></span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0x0e</span>): KeyValue=<span class="number">3</span>;<span class="keyword">break</span>;   <span class="comment">//0000 1110 第四列</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> GPIO_KEY=<span class="number">0xf0</span>;<span class="comment">//1111 0000 再给高电平1低电平0</span></span><br><span class="line"> <span class="keyword">switch</span>(GPIO_KEY)</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0x70</span>): KeyValue=KeyValue;<span class="keyword">break</span>;  <span class="comment">//0111 0000 第一行</span></span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0xb0</span>): KeyValue=KeyValue+<span class="number">4</span>;<span class="keyword">break</span>; <span class="comment">//1011 0000 第二行</span></span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0xd0</span>): KeyValue=KeyValue+<span class="number">8</span>;<span class="keyword">break</span>; <span class="comment">//1101 0000 第三行</span></span><br><span class="line">   <span class="keyword">case</span>(<span class="number">0xe0</span>): KeyValue=KeyValue+<span class="number">12</span>;<span class="keyword">break</span>;<span class="comment">//1110 0000 第四行</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>((a&lt;<span class="number">50</span>)&amp;&amp;(GPIO_KEY!=<span class="number">0xf0</span>))<span class="comment">//松开的判断</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">delay</span>(<span class="number">1000</span>);   <span class="comment">//10ms</span></span><br><span class="line"> a++;   <span class="comment">//500ms</span></span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">KeyDown();</span><br><span class="line">GPIO_DIG=smgduan[KeyValue];   <span class="comment">//带入数据到数码管P0口</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>矩阵按键的原理还是挺有意思的，视频中画了个4*4的图，4行4列对应8个管脚，如何确定按下的哪一个按键是通过行列扫描，通过视频可以理解原理，我的代码中也附带了我自己的注释帮助理解。后面的松开按键的函数方法是按下按键多少秒，长按可以听到一直没500ms的跳数。<br>下载到板子上之后，效果就是按键显示0-F，16位数字分别对应16个按键。</p><hr><h2 id="8-8LED点阵点亮一灯"><a href="#8-8LED点阵点亮一灯" class="headerlink" title="8*8LED点阵点亮一灯"></a>8*8LED点阵点亮一灯</h2><p>代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;reg51.h&gt;    //改成51，因为RCLK在52中重复定义。</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;intrins.h&gt;    //_nop_()的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;  </span><br><span class="line"></span><br><span class="line">sbit SRCLK=P3^<span class="number">6</span>;    <span class="comment">// P3^6 IO口 SHCP</span></span><br><span class="line">sbit RCLK=P3^<span class="number">5</span>;     <span class="comment">// P3^5 IO口 STCP</span></span><br><span class="line">sbit SER=P3^<span class="number">4</span>;      <span class="comment">// P3^4 IO口 DS</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hc595SendByte</span><span class="params">(u8 dat)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u8 a;</span><br><span class="line">    SRCLK=<span class="number">0</span>;</span><br><span class="line">    RCLK=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">8</span>;a++)  <span class="comment">// 8次循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        SER=dat&gt;&gt;<span class="number">7</span>;  <span class="comment">//DS等于传入值的最高位 1000 0000 传入1</span></span><br><span class="line">        dat&lt;&lt;=<span class="number">1</span>;   <span class="comment">//最高位获取过了，将最高位移除，这一次的次高位位下次最高位，下一位0</span></span><br><span class="line"></span><br><span class="line">        SRCLK=<span class="number">1</span>;  <span class="comment">//SHCP 上升沿</span></span><br><span class="line">        _nop_();  <span class="comment">//intrins.h中的方法。</span></span><br><span class="line">        _nop_();  <span class="comment">//延时抖动，us级</span></span><br><span class="line">        SRCLK=<span class="number">0</span>;  <span class="comment">// SHCP 下降沿，什么都不会发生</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    RCLK=<span class="number">1</span>;        <span class="comment">// STCP上升沿，移位寄存器的数据输出</span></span><br><span class="line">    _nop_();</span><br><span class="line">    _nop_();</span><br><span class="line">    RCLK=<span class="number">0</span>;         <span class="comment">// STCP下降沿，移位寄存器的数据输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;       </span><br><span class="line">    Hc595SendByte(<span class="number">0x80</span>);  <span class="comment">//1000 0000 控制第一行的led</span></span><br><span class="line">    P0=<span class="number">0x7f</span>;             <span class="comment">// 0111 1111 控制第一列led</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本次实验的代码我看了很久的原理，它需要理解74HC595的工作原理，我觉得相对于很多刚接触单片机的新手（我也是o(╥﹏╥)o），可能会有一些难以理解，包括所说的上升沿，移位寄存器啥的。这些都是因为你没有数电模电（数电多一些）的基础的原因。我也是在大二上学期学习了数电模电课程才对此有那么点理解度，一点一点花时间去理解原理。说这么多就是想说如果没有数电知识，你可能要花更多的时间去理解，如果你有这份毅力，希望继续认真看下去。<br>本次实验的教程讲述的16*16LED点阵，分模块有点难理解，这里给出一个同学的博客讲解：<a href="https://blog.csdn.net/kiramario/article/details/80317031" target="_blank" rel="noopener">8x8 LED矩阵第一个灯</a><br>讲解比较完善，这里我挑重点列出：<br></p><ol><li>SRCLK，引脚号是11，它的作用是，每当它发生一次上升沿，则P34口的电平值会在位移寄存器中左移一位。当下一次上升沿发生时，移位寄存器的所有位都往左移一位。</li><li>RCLK，引脚号12，当它发生一次上升沿，移位寄存器的值会输出到DA-DH（D0-D7），这里注意一下，D7是高位。</li><li>595芯片只有一个输入口，即P34 I/O口，对应SER，引脚号时14</li><li>注意：一个LED不亮的原因，在点阵模块原理图上的J24上，需要将OE口接地，在单片机开发板上J24的OE口一般会跟VCC，需要把套子拔下来将GND与OE相连。（实验证明，把OE悬空不接也是可以亮的，所以得出只要是OE低电平即可）。<br></li></ol><p>通过原理图，我们可以理解8x8的点阵图，列：从左到右P0^0-P0^7（从低到高）,行：从下到上D0-D7（从低到高）。相应的列低电平，行高电平就能点亮某LED灯。比如：使P0=0x7f（0111 1111）,D7=1,即可点亮左上角第一个LED。<br>74HC595的具体作用就是串转并输入：通俗的将就是一次次输入0或1，最后并行输出8位1和0组合，如1011 0100。</p><blockquote><p>学到这，我发现视频中的板子跟我们的板子有区别，具体是很多接线的地方没有了，我们这套板子是初学者用的所以可能更简单，而视频中的视频也相应的有所减少，完整的在之前给过链接B站上的。</p></blockquote><h2 id="用8-8点阵输出图文"><a href="#用8-8点阵输出图文" class="headerlink" title="用8*8点阵输出图文"></a>用8*8点阵输出图文</h2><p>代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">sbit SER=P3^<span class="number">4</span>;</span><br><span class="line">sbit CLK=P3^<span class="number">5</span>;</span><br><span class="line">sbit SRCLK=P3^<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">u8 code ledwidth[][<span class="number">8</span>]=&#123;&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3e</span>,<span class="number">0x41</span>,<span class="number">0x41</span>,<span class="number">0x41</span>,<span class="number">0x3e</span>,<span class="number">0x00</span>&#125;, <span class="comment">//0      列信息</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x7f</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;, <span class="comment">//1</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x27</span>,<span class="number">0x45</span>,<span class="number">0x45</span>,<span class="number">0x45</span>,<span class="number">0x39</span>,<span class="number">0x00</span>&#125;, <span class="comment">//2</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x36</span>,<span class="number">0x00</span>&#125;, <span class="comment">//3</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0c</span>,<span class="number">0x14</span>,<span class="number">0x24</span>,<span class="number">0x7f</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;, <span class="comment">//4</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x72</span>,<span class="number">0x51</span>,<span class="number">0x51</span>,<span class="number">0x51</span>,<span class="number">0x4e</span>,<span class="number">0x00</span>&#125;, <span class="comment">//5</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3e</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x26</span>,<span class="number">0x00</span>&#125;, <span class="comment">//6</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x4f</span>,<span class="number">0x70</span>,<span class="number">0x00</span>&#125;, <span class="comment">//7</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x36</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x36</span>,<span class="number">0x00</span>&#125;, <span class="comment">//8</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x3e</span>,<span class="number">0x00</span>&#125;, <span class="comment">//9</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x48</span>,<span class="number">0x48</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//P</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x48</span>,<span class="number">0x4C</span>,<span class="number">0x73</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//R</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//E</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x41</span>,<span class="number">0x41</span>,<span class="number">0x62</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//C</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//H</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//I</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;, <span class="comment">//N</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x12</span>,<span class="number">0x14</span>,<span class="number">0x78</span>,<span class="number">0x14</span>,<span class="number">0x12</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,  <span class="comment">//大</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x12</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>&#125;,   <span class="comment">//小</span></span><br><span class="line">&#123;<span class="number">0x7F</span>,<span class="number">0x41</span>,<span class="number">0x5D</span>,<span class="number">0x55</span>,<span class="number">0x5D</span>,<span class="number">0x41</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>&#125;,  <span class="comment">//回</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x7C</span>,<span class="number">0x48</span>,<span class="number">0x48</span>,<span class="number">0xFF</span>,<span class="number">0x48</span>,<span class="number">0x48</span>,<span class="number">0x7C</span>,<span class="number">0x00</span>&#125;&#125;;  <span class="comment">//中</span></span><br><span class="line"> </span><br><span class="line">u16 ledlength[]=&#123;<span class="number">0x7f</span>,<span class="number">0xbf</span>,<span class="number">0xdf</span>,<span class="number">0xef</span>,<span class="number">0xf7</span>,<span class="number">0xfb</span>,<span class="number">0xfd</span>,<span class="number">0xfe</span>&#125;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send</span><span class="params">(u8 n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i;</span><br><span class="line">   CLK=<span class="number">0</span>;</span><br><span class="line">   SRCLK=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">    SER=n&gt;&gt;<span class="number">7</span>;</span><br><span class="line">    n&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    SRCLK=<span class="number">0</span>;</span><br><span class="line">    SRCLK=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    CLK=<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u16 n,i,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">8</span>;n++)     <span class="comment">//内循环的作用就是动态扫描</span></span><br><span class="line">    &#123;</span><br><span class="line">    P0=ledlength[n];   <span class="comment">// 列当n=1，0111 1111</span></span><br><span class="line">    send(ledwidth[j][n]); <span class="comment">// 输入[0][0]     ，也就是0x00</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50</span>);     <span class="comment">//0.5ms      肉眼不可见     </span></span><br><span class="line">    P0=<span class="number">0xff</span>;       <span class="comment">//刷新清零 ，就是不亮</span></span><br><span class="line">    send(<span class="number">0x00</span>);       <span class="comment">//刷新清零</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    j++;     <span class="comment">//重复21个显示图文0-20</span></span><br><span class="line">    j%=<span class="number">21</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这个可以当做一个模板来用了，通过代码也可以很清楚，给出行的（上下）的16进制数，然后用列的各个列为0的动态扫描就可以显示出想要的图案。</p><blockquote><p>一学到这我就想起了骚操作，搞个爱心+女孩的名字，8x8的格子名字复杂的话可能不太清楚所以用首字母，然后就是动态显示（❤+嘿嘿嘿）。这里给出一手爱心的，至于名字自己画一下算一下进制数。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> u8;</span><br><span class="line"></span><br><span class="line">sbit SER=P3^<span class="number">4</span>;</span><br><span class="line">sbit CLK=P3^<span class="number">5</span>;</span><br><span class="line">sbit SRCLK=P3^<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">u8 code ledwidth[][<span class="number">8</span>]=&#123;&#123;<span class="number">0x18</span>,<span class="number">0x3c</span>,<span class="number">0x3e</span>,<span class="number">0x1f</span>,<span class="number">0x3e</span>,<span class="number">0x3c</span>,<span class="number">0x18</span>,<span class="number">0x00</span>&#125;&#125;; </span><br><span class="line">u16 ledlength[]=&#123;<span class="number">0x7f</span>,<span class="number">0xbf</span>,<span class="number">0xdf</span>,<span class="number">0xef</span>,<span class="number">0xf7</span>,<span class="number">0xfb</span>,<span class="number">0xfd</span>,<span class="number">0xfe</span>&#125;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span><span class="params">(u16 i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(i--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send</span><span class="params">(u8 n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 i;</span><br><span class="line">   CLK=<span class="number">0</span>;</span><br><span class="line">   SRCLK=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       SER=n&gt;&gt;<span class="number">7</span>;</span><br><span class="line">       n&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">       SRCLK=<span class="number">0</span>;</span><br><span class="line">       SRCLK=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">CLK=<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u16 n,i,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">       <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">       &#123;</span><br><span class="line">       <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">8</span>;n++)<span class="comment">//内循环的作用就是动态扫描</span></span><br><span class="line">       &#123;</span><br><span class="line">       P0=ledlength[n];   <span class="comment">// 列当n=1，0111 1111</span></span><br><span class="line">       send(ledwidth[j][n]); <span class="comment">// 输入[0][0]，也就是0x00</span></span><br><span class="line">       <span class="built_in">delay</span>(<span class="number">50</span>);<span class="comment">//0.5ms 肉眼不可见       </span></span><br><span class="line">       P0=<span class="number">0xff</span>;  <span class="comment">//刷新清零 ，就是不亮</span></span><br><span class="line">       send(<span class="number">0x00</span>);  <span class="comment">//刷新清零</span></span><br><span class="line">       &#125;</span><br><span class="line">       &#125;</span><br><span class="line">        j++;       <span class="comment">//重复1个显示图文</span></span><br><span class="line">        j%=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体效果如图：<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA/5.jpg" title="图示"><br>反正效果还是不错的。</p>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title>初学单片机的障碍</title>
    <url>/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/</url>
    <content><![CDATA[<h2 id="丛书推荐-我没怎么看"><a href="#丛书推荐-我没怎么看" class="headerlink" title="丛书推荐(我没怎么看)"></a>丛书推荐(我没怎么看)</h2><p>这本书的内容大多是仿真内容。（如果想直接附带实践的学习在后面有资料推荐）<a id="more"></a></p><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/0.jpg" title="图示"><br>由于疫情原因，资金不足，买的二手书，有些许笔记也不错。<p>单片机开发板可以选择51单片机stc89c52开发板</p><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/1.jpg" title="图示"><br>四五十块钱就行了，也不需要买的太全。<hr><h2 id="资料来源"><a href="#资料来源" class="headerlink" title="资料来源"></a>资料来源</h2><p>如果手头买了单片机的，比如上面的STC89c52单片机，单片机里面有二维码，里面有百度云资料下载，根据单片机板右下角的型号如图<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/4.jpg" title="图示">选择资料下载。内涵丰富的视频资源以及完整的系统图。（视频真的超赞的，目前还在跟着学习。）<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/5.jpg" title="图示"></p><hr><h2 id="软件需求"><a href="#软件需求" class="headerlink" title="软件需求"></a>软件需求</h2><p>单片机学习需要的Keil开发环境和Proteus仿真软件，书上推荐的是Keil4和Proteus7.10，但由于下载的时候Proteus7.10元件库的缺失，最后我下载的是Proteus7.8，差不太多。<br>下载地址选择微信公众号–软件安装管家–软件目录<br></p><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/2.jpg" title="图示"><img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/3.jpg" title="图示"><br><p>软件管家上面有网盘下载资料和丰富的安装过程，如遇问题个别搜资料可解决。</p><hr><h2 id="keil4的编译-目标未创建"><a href="#keil4的编译-目标未创建" class="headerlink" title="keil4的编译-目标未创建"></a>keil4的编译-目标未创建</h2><p>首先讲一下自己碰到的问题，在编译语言后出现<br></p><blockquote><p>— Error: failed to execute ‘d:\Keil\51单片机\BIN\C51.EXE’<br></p></blockquote><!-- more --><p>一开始百思不得其解，网上很多方法也不适用，后来注意到错误的路径，因为当初害怕中文存储的路径会有影响，所以在下载安装完成之后将存在D盘中的 /51单片机/ 改成了 /51dpj/ ，这也是问题所在。<br>解决措施：<br></p><blockquote><p>找到自己的keil安装目录，下面有个TOOLS.INI文件。用记事本打开这个文件，找到：[C51] PATH=”d:\Keil\C51”或类似字样，将PATH=后面的内容改为自己keil实际安装的目录，最后一个文件夹是C51。我把\51单片机\换成实际路径\51dpj\就好了，其他的不需要动。然后保存TOOLS.INI。重启keil即可生效（务必要重启keil）。</p></blockquote><hr><h2 id="烧入不成功的可能原因"><a href="#烧入不成功的可能原因" class="headerlink" title="烧入不成功的可能原因"></a>烧入不成功的可能原因</h2><p>1.如果选好文件后点击 “程序下载” 出现烧入不成功，如<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/7.jpg" title="图示"><br>,这里不是什么网上所说的什么波特率太高，你尝试一下把芯片类型从STC89Cxx Series改成STC89Cxx (NEW)<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/8.jpg" title="图示"><br>然后再点“程序下载”，就可以了。上图包含了下载成功后的内容。<br>2.程序正确，将波特率调低再度尝试。</p><hr><h2 id="流水灯代码build失败"><a href="#流水灯代码build失败" class="headerlink" title="流水灯代码build失败"></a>流水灯代码build失败</h2><p>切记注意头文件的引入，左移右移需要引入<code>#include &quot;intrins.h&quot;</code>的头文件。</p><hr><h2 id="串口通信无法下载程序以及数据显示乱码"><a href="#串口通信无法下载程序以及数据显示乱码" class="headerlink" title="串口通信无法下载程序以及数据显示乱码"></a>串口通信无法下载程序以及数据显示乱码</h2><p>在串口通信章节，用到串口调试助手发送数据，再由单片机接收再返回显示。在发送数据时，有时候会出现乱码，这里是因为UTX和URX之间的互通受影响。需要将单片机上UTX与URX短接，P3.0与P3.1也是。如图。<img src="/%E5%88%9D%E5%AD%A6%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E9%9A%9C%E7%A2%8D/9.jpg" title="图示">.<br>但是在还没下载程序前，下载程序时，需要将UTX连接P3.0，URX连接P3.1。不然会下载不成功。</p>]]></content>
      <categories>
        <category>单片机</category>
      </categories>
      <tags>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客文章</title>
    <url>/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h1 id="Blog文章的编写（持续更新）"><a href="#Blog文章的编写（持续更新）" class="headerlink" title="Blog文章的编写（持续更新）"></a>Blog文章的编写（持续更新）</h1><h2 id="构建md"><a href="#构建md" class="headerlink" title="构建md"></a>构建md</h2><p>在主目录Blog中打开Git Bush here<br>输入</p><blockquote><pre><code>hexo new &quot;你文章的主题&quot;</code></pre></blockquote><a id="more"></a><p>然后就会帮你在\blog\source_posts\你的文章主题.md</p><h2 id="写标题"><a href="#写标题" class="headerlink" title="写标题"></a>写标题</h2><p>使用标题时需要#键<br>#一级标题<br>##二级标题<br>###三级标题<br>….<br>######六级标题</p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>第一个段落</p><p>第二个段落</p><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><blockquote><p>这是一引用段落，将会被高亮显示（研究一下如何使他背景变黑）</p></blockquote><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>代码如下</p><blockquote><pre><code>[百度](https://www.baidu.com/index.php?tn=98010089_dg_pg&amp;ch=11)</code></pre></blockquote><p><a href="https://www.baidu.com/index.php?tn=98010089_dg_pg&ch=11" target="_blank" rel="noopener">百度</a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>代码如下</p><blockquote><pre><code>![卡通](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=250831898,1018562677&amp;fm=26&amp;gp=0.jpg) </code></pre></blockquote><p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=250831898,1018562677&fm=26&gp=0.jpg" alt="卡通"></p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>代码如下</p><blockquote><pre><code>* 无序列表项</code></pre></blockquote><ul><li>无序列表项</li><li>无序列表项</li><li>无序列表项<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2></li></ul><ol><li>有序列表项1</li><li>有序列表项2</li><li>有序列表项3<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2>三条及以上的-或者*<blockquote><pre><code> --- 
*** </code></pre></blockquote></li></ol><hr><hr><hr><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>代码如下</p><blockquote><pre><code>表头|表头|表头
---|:---:|---:
内容|内容|内容
内容|内容|内容</code></pre></blockquote><p>有时候无法显示正确<br>可以用</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;USB-TTL&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;td&gt;ESP8266-01S&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;3.3V&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;td&gt;VCC&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;GND&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;td&gt;GND&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;RX&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;td&gt;TX&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;TX&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;td&gt;RX&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;3.3V&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;td&gt;CH_PD(EN)&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure><p>注意点</p><ol><li>默认都靠左，两边都有冒号居中<table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table></li></ol><h2 id="回车"><a href="#回车" class="headerlink" title="回车"></a>回车</h2><p>在文字后面加<br><br><code>&lt;br/&gt;</code><br>就会自动帮你回车。</p><h2 id="markdown可视化编辑"><a href="#markdown可视化编辑" class="headerlink" title="markdown可视化编辑"></a>markdown可视化编辑</h2><p>先按Ctrl+k，然后点一下v，就可以了<br>效果如下<br><img src="/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/1.png" title="图示"></p>]]></content>
      <categories>
        <category>others</category>
      </categories>
  </entry>
  <entry>
    <title>申请域名后的一些问题（持续更新）</title>
    <url>/%E5%9F%9F%E5%90%8D%E7%94%B3%E8%AF%B7%E5%90%8E%E7%9A%84%E4%BA%9B%E8%AE%B8%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="针对域名后问题"><a href="#针对域名后问题" class="headerlink" title="针对域名后问题"></a>针对域名后问题</h1><a id="more"></a><p>因为觉得本身.github.io的后缀不好，而去购买域名，这是一个好事，但是也会在后面暴露一些问题。</p><h2 id="关于域名如何与GitHub相连"><a href="#关于域名如何与GitHub相连" class="headerlink" title="关于域名如何与GitHub相连"></a>关于域名如何与GitHub相连</h2><p>基本可以参考大佬的博客<br>例如：<a href="https://blog.csdn.net/u012733501/article/details/104841734?depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-3&utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-3" target="_blank" rel="noopener">易01的CSDN博客</a></p><h2 id="CNAME的构建"><a href="#CNAME的构建" class="headerlink" title="CNAME的构建"></a>CNAME的构建</h2><p>一开始我在参考大佬的博客时，一直被这个问题困扰（可能是我无知），大佬们说要一个无后缀的CNAME文件，内容为你申请的域名如cjl520.top。<br>用Win10的必须打开我的电脑-查看-打开文件扩展名</p><img src="/%E5%9F%9F%E5%90%8D%E7%94%B3%E8%AF%B7%E5%90%8E%E7%9A%84%E4%BA%9B%E8%AE%B8%E9%97%AE%E9%A2%98/1.png" title="图示"><br><p>然后在你Blog跟目下找source文件夹，创建一个TXT文档，在里面写好域名cjl520.top，然后点击另存为，格式选所有类型，名字改为CNAME即可。（这是一个无后缀文件，电脑上一般打不开）</p><img src="/%E5%9F%9F%E5%90%8D%E7%94%B3%E8%AF%B7%E5%90%8E%E7%9A%84%E4%BA%9B%E8%AE%B8%E9%97%AE%E9%A2%98/2.png" title="图示">]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
</search>
